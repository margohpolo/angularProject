{"version":3,"sources":["./src/app/blog/blog.component.html","./src/app/blog/singlepost/singlepost.component.html","./src/app/blog/blog-routing.module.ts","./src/app/blog/blog.component.css","./src/app/blog/blog.component.ts","./src/app/blog/blog.module.ts","./src/app/blog/blog.service.ts","./src/app/blog/singlepost/singlepost.component.css","./src/app/blog/singlepost/singlepost.component.ts"],"names":[],"mappings":"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","file":"blog-blog-module-es2015.js","sourcesContent":["export default \"<section class=\\\"row w-100\\\" style=\\\"display:flex;\\\">\\n    <div *ngFor=\\\"let post of (allPost$ | async)\\\" class=\\\"card\\\" style=\\\"width: 18rem;\\\">\\n        <h3>Post ID: {{post.id}}</h3>\\n        <div class=\\\"card-body\\\">\\n            <h5 class=\\\"card-title\\\">Title: {{post.title}}</h5>\\n            <a [routerLink]=\\\"['/blog', post.id]\\\" routerLinkActive=\\\"active\\\" class=\\\"btn btn-primary\\\"\\n                id=\\\"{{post.id}}\\\" [ngStyle]=\\\"{'background-color': 'red'}\\\" (click)=\\\"componentRedirect(post.id)\\\">\\n                Read More</a>\\n        </div>\\n    </div>\\n</section>\\n\"","export default \"<div style=\\\"display: grid; grid-gap: 20px;\\\">\\n    <h2>{{ post.title | String }}</h2>\\n    <br />\\n    <div style=\\\"text-align: left;\\\">\\n        <p>{{ post.body | String }}</p>\\n    </div>\\n</div>\"","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { BlogComponent } from \"./blog.component\";\r\n// import { PostResolver } from \"./postresolver.service\";\r\nimport { SinglepostComponent } from \"./singlepost/singlepost.component\";\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'', component: BlogComponent\r\n  },\r\n  {\r\n    // path:':postId', component: SinglepostComponent, resolve: {post: PostResolver}\r\n    path:':postId', component: SinglepostComponent\r\n  }\r\n]\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class BlogRoutingModule {}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Jsb2cvYmxvZy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BlogService, Post } from './blog.service';\n\n@Component({\n  selector: 'app-blog',\n  templateUrl: './blog.component.html',\n  styleUrls: ['./blog.component.css'],\n  providers: [BlogService]\n})\nexport class BlogComponent implements OnInit {\n\n  allPost$: Observable<Post[]>;\n  // allPost$: Subscription;\n\n  constructor(private blogService: BlogService, private _router: Router) { }\n\n  // @Output() postIdEmitter = new EventEmitter<number>();\n\n  ngOnInit() {\n    // this.allPost$ = this.blogService.getAllPosts().pipe(map(res => res)).subscribe(res => res);\n    this.allPost$ = this.blogService.getAllPosts()\n    console.log(typeof this.allPost$, this.allPost$);\n  }\n\n  componentRedirect(postId:string){\n    event.preventDefault();\n    this._router.navigate(['blog/', postId]);\n    // console.log(this.svcId, this.title, this.heading, this.description);\n    // this.articleEmitter.emit(this.service);\n\n  }\n\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BlogComponent } from './blog.component';\nimport { BlogRoutingModule } from './blog-routing.module';\nimport { SinglepostComponent } from './singlepost/singlepost.component';\n\n\n\n@NgModule({\n  declarations: [BlogComponent, SinglepostComponent],\n  imports: [\n    CommonModule,\n    BlogRoutingModule\n  ],\n  providers: [\n      \n  ]\n})\nexport class BlogModule { }\n","import { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { catchError, retry } from 'rxjs/operators';\r\n\r\nexport interface Post {\r\n    id: number;\r\n    title: string;\r\n    body: string;\r\n}\r\n\r\nexport interface Posts {\r\n    isAvailable: boolean;\r\n    posts: Post[];\r\n}\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BlogService {\r\n    \r\n    myAppUrl: string;\r\n    myApiUrl: string;\r\n    httpOptions = {\r\n        headers: new HttpHeaders({\r\n            'Content-Type': 'application/json; charset=utf-8'\r\n    })\r\n  };\r\n\r\n    constructor(private http: HttpClient) {        \r\n      this.myAppUrl = environment.mockendBlogUrl;\r\n      this.myApiUrl = '/posts';\r\n    }\r\n\r\n    errorHandler(error) {\r\n        let errorMessage = '';\r\n        if (error.error instanceof ErrorEvent) {\r\n        // Get client-side error\r\n        errorMessage = error.error.message;\r\n        } else {\r\n        // Get server-side error\r\n        errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n        }\r\n        console.log(errorMessage);\r\n        return throwError(errorMessage);\r\n    }\r\n\r\n    getAllPosts():Observable<Post[]> {\r\n        // return this.http.get<User[]>(environment.mockendUsersUrl + \"users\", {observe: 'response'});\r\n        return this.http.get<Post[]>(this.myAppUrl + this.myApiUrl)\r\n            .pipe(\r\n                retry(1),\r\n                catchError(this.errorHandler)\r\n            );\r\n    }\r\n\r\n    getPostById(postId:number):Observable<Post> {\r\n        // return this.http.get<User>(`${environment.mockendUsersUrl}/users/${userId}`, {observe: 'response'}).pipe(map(res => res));\r\n        return this.http.get<Post>(this.myAppUrl + this.myApiUrl + '/' + postId)\r\n            .pipe(\r\n            retry(1),\r\n            catchError(this.errorHandler)\r\n            );\r\n    }\r\n    \r\n\r\n    createPost(postDetails:Post):Observable<Post> {\r\n        // return this.http.post<User>(`${environment.mockendUsersUrl}/users`, userDetails);\r\n        return this.http.post<Post>(this.myAppUrl + this.myApiUrl, JSON.stringify(postDetails), this.httpOptions)\r\n            .pipe(\r\n                retry(1),\r\n                catchError(this.errorHandler)\r\n            );\r\n    }\r\n\r\n    updatePost(postId:number, postUpdate:Post):Observable<Post>{\r\n        // const httpOptions = {\r\n        // method: 'PUT',\r\n        // body: JSON.stringify(userUpdate),\r\n        // headers: new HttpHeaders({\r\n        //     'Content-Type':  'application/json'\r\n        // })\r\n        // };\r\n\r\n        // return this.http.put<User>(`${environment.mockendUsersUrl}/users/${userId}`, JSON.stringify(userUpdate), httpOptions);\r\n\r\n        return this.http.put<Post>(this.myAppUrl + this.myApiUrl + '/' + postId, JSON.stringify(postUpdate), this.httpOptions)\r\n            .pipe(\r\n                retry(1),\r\n                catchError(this.errorHandler)\r\n            );\r\n    }\r\n        \r\n    deletePost(postId:number):Observable<Post>{\r\n        // return this.http.delete<User>(`${environment.mockendUsersUrl}/users/${userId}`);\r\n        return this.http.delete<Post>(this.myAppUrl + this.myApiUrl + '/' + postId)\r\n            .pipe(\r\n                retry(1),\r\n                catchError(this.errorHandler)\r\n            );\r\n    }\r\n    \r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Jsb2cvc2luZ2xlcG9zdC9zaW5nbGVwb3N0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, Data } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BlogService, Post } from '../blog.service';\n\n@Component({\n  selector: 'app-singlepost',\n  templateUrl: './singlepost.component.html',\n  styleUrls: ['./singlepost.component.css']\n})\nexport class SinglepostComponent implements OnInit {\n\n  // @Input('postIdEmitter') postId: number;\n\n  constructor(private blogService: BlogService, private route: ActivatedRoute) { }\n\n  post: Post;\n  \n\n  ngOnInit() {\n    // this.blogService.getPostById(this.postId).subscribe(res => this.post = res);\n    // this.blogService.getPostById(Number(this.route.snapshot.paramMap.get('postId'))).pipe(map(res => {this.post = res})).subscribe();\n\n    // // Add Resolver\n    // this.route.data.subscribe(\n    //   (data: Data) => {\n    //     this.post = data['post'];\n    //   }\n    // );\n\n    console.log(this.post);\n  }\n\n}\n"],"sourceRoot":"webpack:///"}