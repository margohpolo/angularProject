{"version":3,"sources":["src/app/signup/page/page.component.html","src/app/signup/signupform/signupform.component.html","src/app/signup/signuplist/signuplist.component.html","src/app/signup/page/page.component.css","src/app/signup/page/page.component.ts","src/app/signup/signup-routing.module.ts","src/app/signup/signup.module.ts","src/app/signup/signupform/signupform.component.css","src/app/signup/signupform/signupform.component.ts","src/app/signup/signuplist/signuplist.component.css","src/app/signup/signuplist/signuplist.component.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"container\\\">\\n    <div class=\\\"card login-form\\\">\\n        <div class=\\\"card-body\\\">\\n            <h3 class=\\\"card-title text-center text-danger text-underline\\\">Sign Up to Join Accenture</h3>\\n            <app-signupform (PostData)=\\\"getRegisteredUser($event)\\\"></app-signupform>\\n        </div>\\n    </div>\\n    <app-signuplist [userList]=\\\"formUsers\\\"></app-signuplist>\\n    <button (click)=\\\"updateUser()\\\">View Updated Users</button>\\n    <div class=\\\"row\\\">\\n    </div>\\n</div>\"","export default \"<div class=\\\"card-text\\\" (scroll)=\\\"onScroll($event)\\\" style=\\\"height: 250px;\\\">\\n    <form [formGroup]=\\\"signUpForm\\\" (ngSubmit)=\\\"handleSubmit()\\\">\\n        <div class=\\\"form-group\\\">\\n            <label>Firstname</label>\\n            <input type=\\\"text\\\" id=\\\"firstname\\\" #fname class=\\\"form-control\\\"\\n                formControlName=\\\"firstname\\\" [ngClass]=\\\"{'is-invalid': submitted && f.firstname.errors }\\\" />\\n            <div *ngIf=\\\"submitted && f.firstname.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"f.firstname.errors.required\\\">First Name should not be empty!</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label>Lastname</label>\\n            <input type=\\\"text\\\" name=\\\"lastname\\\" class=\\\"form-control\\\"\\n                formControlName=\\\"lastname\\\" [ngClass]=\\\"{'is-invalid': submitted && f.lastname.errors }\\\" />\\n            <div *ngIf=\\\"submitted && f.lastname.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"f.lastname.errors.required\\\">Last Name should not be empty!</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label>Email</label>\\n            <input type=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control\\\"\\n                formControlName=\\\"useremail\\\" [ngClass]=\\\"{'is-invalid': submitted && f.useremail.errors }\\\" />\\n            <div *ngIf=\\\"submitted && f.useremail.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"f.useremail.errors.required\\\">Email should not be empty!</div>\\n                <div *ngIf=\\\"f.useremail.errors.email\\\">Please enter the valid email!</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label>Country</label>\\n            <select class=\\\"form-control\\\" formControlName=\\\"country\\\"\\n                [ngClass]=\\\"{'is-invalid': submitted && f.country.errors }\\\">\\n                <option value=\\\"\\\">...Select...</option>\\n                <option value=\\\"SG\\\">Singapore</option>\\n                <option value=\\\"IN\\\">India</option>\\n                <option value=\\\"USA\\\">United States</option>\\n            </select>\\n            <div *ngIf=\\\"submitted && f.country.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"f.country.errors.required\\\">Country should not be empty!</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label>Address</label>\\n            <textarea class=\\\"form-control\\\" formControlName=\\\"address\\\"\\n                [ngClass]=\\\"{'is-invalid': submitted && f.address.errors }\\\"></textarea>\\n            <div *ngIf=\\\"submitted && f.address.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"f.address.errors.required\\\">Country should not be empty!</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <input type=\\\"submit\\\" name=\\\"signup\\\" class=\\\"btn btn-danger float-end\\\" />\\n        </div>\\n    </form>\\n</div>\"","export default \"<p>signuplist works!</p>\\n\\n<table class=\\\"table\\\" *ngIf=\\\"UserList.length>0\\\">\\n    <thead>\\n        <tr>\\n            <th scope=\\\"col\\\">#</th>\\n            <th scope=\\\"col\\\">First Name</th>\\n            <th scope=\\\"col\\\">Last Name</th>\\n            <th scope=\\\"col\\\">Email</th>\\n            <th scope=\\\"col\\\">Country</th>\\n            <th scope=\\\"col\\\">Address</th>\\n        </tr>\\n    </thead>\\n    <tbody>\\n        <tr *ngFor=\\\"let user of UserList; let i=index;\\\">\\n            <th scope=\\\"row\\\">{{i+1}}</th>\\n            <td>{{user.firstname}}</td>\\n            <td>{{user.lastname}}</td>\\n            <td>{{user.email}}</td>\\n            <td>{{user.country}}</td>\\n            <td>{{user.address}}</td>\\n        </tr>\\n    </tbody>\\n</table>\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpZ251cC9wYWdlL3BhZ2UuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\nimport { FormUser, PageUser } from '../../_helpers/interfaces/userDetails';\n\n\n@Component({\n  selector: 'app-page',\n  templateUrl: './page.component.html',\n  styleUrls: ['./page.component.css']\n})\nexport class PageComponent implements OnInit {\n\n  formUsers: FormUser[];\n\n  submittedUser: FormUser;\n\n  PageUsers: PageUser[];\n\n  // usersFromChild=[];\n\n  // user = {\n  //   name:\"Alex\"\n  // }\n  // @ViewChild(SignupformComponent,{static: true}) child;\n  //@ViewChild('fname',{static: false,read:ElementRef}) firstname: ElementRef;\n  //@ViewChild('nameInput',{static: false,read:ElementRef}) someInput: ElementRef;\n\n  constructor() { }\n  ngOnInit(){\n    //console.log(this.child.usersData);\n    //this.firstname.nativeElement.style.border = \"3px dashed green\";\n  }\n\n  getRegisteredUser(event){\n    this.formUsers.push(event);\n    // console.log('List of registedred users');\n    // console.log(this.allUser);\n  }\n\n  ngAfterViewInit(){\n    // this.usersFromChild = this.child.message;\n\n    //this.someInput.nativeElement.value = \"Jugal\";\n    //this.firstname.nativeElement.style.border = \"3px dashed green\";\n  }\n  ngAfterViewChecked(){\n    // this.usersFromChild = this.child.usersData;\n    // console.log(this.usersFromChild);\n  }\n  updateUser(){\n    // this.user.name = \"Murali\";\n  }\n\n}\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { PageComponent } from \"./page/page.component\";\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'', component: PageComponent\r\n  }\r\n]\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class SignupRoutingModule {}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PageComponent } from './page/page.component';\nimport { SignupformComponent } from './signupform/signupform.component';\nimport { SignuplistComponent } from './signuplist/signuplist.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SignupRoutingModule } from './signup-routing.module';\n\n\n@NgModule({\n  declarations: [\n    PageComponent,\n    SignupformComponent,\n    SignuplistComponent\n  ],\n  imports: [\n    CommonModule,\n    SignupRoutingModule,\n    ReactiveFormsModule\n  ]\n})\nexport class SignupModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpZ251cC9zaWdudXBmb3JtL3NpZ251cGZvcm0uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, Output,EventEmitter,ViewChild,ElementRef,ChangeDetectionStrategy,DoCheck,OnChanges, Input } from '@angular/core';\nimport { FormBuilder,FormControl,FormGroup,Validators } from '@angular/forms';\n\nimport { FormUser } from '../../_helpers/interfaces/userDetails';\n\n@Component({\n  selector: 'app-signupform',\n  templateUrl: './signupform.component.html',\n  styleUrls: ['./signupform.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SignupformComponent implements OnInit {\n  signUpForm: FormGroup;\n  submitted:boolean;\n  userData: FormUser;\n  message: string = \"This is child Message\";\n  @Output() PostData = new EventEmitter<FormUser>();\n  @Input('formuser') formuser;\n  // @ViewChild('fname',{static: false,read:ElementRef}) firstname: ElementRef;\n  constructor(private formBuilder: FormBuilder) {\n    this.submitted = false;\n   }\n\n  ngOnInit() {\n\n    this.signUpForm = this.formBuilder.group({\n      firstname:['',Validators.required],\n      lastname:['',Validators.required],\n      useremail:['',[Validators.required,Validators.email]],\n      country:['SG',Validators.required],\n      address:['',Validators.required]\n    });\n\n    console.log(\"NgOnInit()\");\n\n  }\n\n  get f(){\n    return this.signUpForm.controls;\n  }\n\n\n  handleSubmit(){\n    this.submitted = true;\n    //console.log(this.registerForm.value);\n    this.userData = this.signUpForm.value;\n\n    this.message = \"This is child Message Updated\";\n\n    //console.log(this.usersData);\n    this.PostData.emit(this.userData)\n  }\n  ngOnChanges(){\n    console.log(\"CHANGES\")\n  }\n  ngDoCheck(){\n    console.log(\"DO CHECK\")\n  }\n  ngAfterViewInit(){\n    // this.firstname.nativeElement.style.border = \"3px dashed green\";\n  }\n\n  onScroll(){\n    console.log('On scroll in Signup Component');\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpZ251cC9zaWdudXBsaXN0L3NpZ251cGxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, Input, OnInit } from '@angular/core';\nimport { PageUser } from 'src/app/_helpers/interfaces/userDetails';\n\n@Component({\n  selector: 'app-signuplist',\n  templateUrl: './signuplist.component.html',\n  styleUrls: ['./signuplist.component.css']\n})\nexport class SignuplistComponent implements OnInit {\n\n  UserList: PageUser[];\n  constructor() {\n    console.log(this.UserList);\n  }\n\n  ngOnInit() {\n    //console.log(this.UserList);\n    //alert('ngOnInit');\n\n  }\n\n  // To Edit\n  // ngOnInit() {\n  //   this.userService.getAllUsers().subscribe(res => {\n  //     console.log(\"All Users \", res);\n  //     this.allUsers = res;\n  //     this.loading = res.loading;\n  //     this.errors = res.errors;\n  //   });\n  // }\n\n  // ngOnDestroy() {\n  //   this.userService.getAllUsers().unsubscribe();\n  // }\n\n  ngAfterViewChecked(){\n    //alert('ngAfterViewChecked');\n    if(this.UserList.length>0){\n      console.log(this.UserList);\n    }\n  }\n\n}\n"],"sourceRoot":"webpack:///","file":"signup-signup-module-es5.js"}