{"version":3,"sources":["src/app/blog/blog.component.html","src/app/blog/singlepost/singlepost.component.html","src/app/blog/blog-routing.module.ts","src/app/blog/blog.component.css","src/app/blog/blog.component.ts","src/app/blog/blog.module.ts","src/app/blog/blog.service.ts","src/app/blog/singlepost/singlepost.component.css","src/app/blog/singlepost/singlepost.component.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<section class=\\\"row w-100\\\" style=\\\"display:flex;\\\">\\n    <div *ngFor=\\\"let post of (allPost$ | async)\\\" class=\\\"card\\\" style=\\\"width: 18rem;\\\">\\n        <h3>Post ID: {{post.id}}</h3>\\n        <div class=\\\"card-body\\\">\\n            <h5 class=\\\"card-title\\\">Title: {{post.title}}</h5>\\n            <a [routerLink]=\\\"['/blog', post.id]\\\" routerLinkActive=\\\"active\\\" class=\\\"btn btn-primary\\\"\\n                id=\\\"{{post.id}}\\\" [ngStyle]=\\\"{'background-color': 'red'}\\\" (click)=\\\"componentRedirect(post.id)\\\">\\n                Read More</a>\\n        </div>\\n    </div>\\n</section>\\n\"","export default \"<div style=\\\"display: grid; grid-gap: 20px;\\\">\\n    <h2>Post #{{ post.id }}: {{ post.title }}</h2>\\n    <br />\\n    <div style=\\\"text-align: left;\\\">\\n        <p>{{ post.body }}</p>\\n    </div>\\n</div>\"","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { BlogComponent } from \"./blog.component\";\r\n// import { PostResolver } from \"./postresolver.service\";\r\nimport { SinglepostComponent } from \"./singlepost/singlepost.component\";\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'', component: BlogComponent\r\n  },\r\n  {\r\n    // path:':postId', component: SinglepostComponent, resolve: {post: PostResolver}\r\n    path:':postId', component: SinglepostComponent\r\n  }\r\n]\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class BlogRoutingModule {}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Jsb2cvYmxvZy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, of, Subscription } from 'rxjs';\nimport { filter, map, single } from 'rxjs/operators';\nimport { BlogService, Post } from './blog.service';\n\n@Component({\n  selector: 'app-blog',\n  templateUrl: './blog.component.html',\n  styleUrls: ['./blog.component.css'],\n  providers: [BlogService]\n})\nexport class BlogComponent implements OnInit {\n\n  allPost$: Observable<Post[]>;\n  // postEmit:Post;\n  // allPost$: Subscription;\n\n  constructor(private blogService: BlogService, private _router: Router) { }\n\n  ngOnInit() {\n    // this.allPost$ = this.blogService.getAllPosts().pipe(map(res => res)).subscribe(res => res);\n    this.allPost$ = this.blogService.getAllPosts();\n    console.log(typeof this.allPost$, this.allPost$);\n  }\n\n  componentRedirect(postId:string){\n    event.preventDefault();\n    // this.allPost$.pipe(map(p => p.find(p => p.id == Number(postId)))).subscribe(res => this.postEmit = res);\n    // console.log(\"Click:\", this.postEmit);\n    // this.blogService.postEmitter.emit(this.postEmit);\n    this._router.navigate(['blog/', postId]);\n    // console.log(this.svcId, this.title, this.heading, this.description);\n    // this.articleEmitter.emit(this.service);\n\n  }\n\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BlogComponent } from './blog.component';\nimport { BlogRoutingModule } from './blog-routing.module';\nimport { SinglepostComponent } from './singlepost/singlepost.component';\n\n\n\n@NgModule({\n  declarations: [BlogComponent, SinglepostComponent],\n  imports: [\n    CommonModule,\n    BlogRoutingModule\n  ],\n  providers: [\n      \n  ]\n})\nexport class BlogModule { }\n","import { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { Injectable, EventEmitter } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { catchError, retry } from 'rxjs/operators';\r\n\r\nexport interface Post {\r\n    id: number;\r\n    title: string;\r\n    body: string;\r\n}\r\n\r\nexport interface Posts {\r\n    isAvailable: boolean;\r\n    posts: Post[];\r\n}\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BlogService {\r\n    \r\n    postEmitter = new EventEmitter<Post>();\r\n\r\n    myAppUrl: string;\r\n    myApiUrl: string;\r\n    httpOptions = {\r\n        headers: new HttpHeaders({\r\n            'Content-Type': 'application/json; charset=utf-8'\r\n    })\r\n  };\r\n\r\n    constructor(private http: HttpClient) {        \r\n      this.myAppUrl = environment.mockendBlogUrl;\r\n      this.myApiUrl = '/posts';\r\n    }\r\n\r\n    errorHandler(error) {\r\n        let errorMessage = '';\r\n        if (error.error instanceof ErrorEvent) {\r\n        // Get client-side error\r\n        errorMessage = error.error.message;\r\n        } else {\r\n        // Get server-side error\r\n        errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n        }\r\n        console.log(errorMessage);\r\n        return throwError(errorMessage);\r\n    }\r\n\r\n    getAllPosts():Observable<Post[]> {\r\n        // return this.http.get<User[]>(environment.mockendUsersUrl + \"users\", {observe: 'response'});\r\n        return this.http.get<Post[]>(this.myAppUrl + this.myApiUrl)\r\n            .pipe(\r\n                retry(1),\r\n                catchError(this.errorHandler)\r\n            );\r\n    }\r\n\r\n    getPostById(postId:number):Observable<Post> {\r\n        // return this.http.get<User>(`${environment.mockendUsersUrl}/users/${userId}`, {observe: 'response'}).pipe(map(res => res));\r\n        return this.http.get<Post>(this.myAppUrl + this.myApiUrl + '/' + postId)\r\n            .pipe(\r\n            retry(1),\r\n            catchError(this.errorHandler)\r\n            );\r\n    }\r\n    \r\n\r\n    createPost(postDetails:Post):Observable<Post> {\r\n        // return this.http.post<User>(`${environment.mockendUsersUrl}/users`, userDetails);\r\n        return this.http.post<Post>(this.myAppUrl + this.myApiUrl, JSON.stringify(postDetails), this.httpOptions)\r\n            .pipe(\r\n                retry(1),\r\n                catchError(this.errorHandler)\r\n            );\r\n    }\r\n\r\n    updatePost(postId:number, postUpdate:Post):Observable<Post>{\r\n        // const httpOptions = {\r\n        // method: 'PUT',\r\n        // body: JSON.stringify(userUpdate),\r\n        // headers: new HttpHeaders({\r\n        //     'Content-Type':  'application/json'\r\n        // })\r\n        // };\r\n\r\n        // return this.http.put<User>(`${environment.mockendUsersUrl}/users/${userId}`, JSON.stringify(userUpdate), httpOptions);\r\n\r\n        return this.http.put<Post>(this.myAppUrl + this.myApiUrl + '/' + postId, JSON.stringify(postUpdate), this.httpOptions)\r\n            .pipe(\r\n                retry(1),\r\n                catchError(this.errorHandler)\r\n            );\r\n    }\r\n        \r\n    deletePost(postId:number):Observable<Post>{\r\n        // return this.http.delete<User>(`${environment.mockendUsersUrl}/users/${userId}`);\r\n        return this.http.delete<Post>(this.myAppUrl + this.myApiUrl + '/' + postId)\r\n            .pipe(\r\n                retry(1),\r\n                catchError(this.errorHandler)\r\n            );\r\n    }\r\n    \r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Jsb2cvc2luZ2xlcG9zdC9zaW5nbGVwb3N0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, Data } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BlogService, Post } from '../blog.service';\n\n@Component({\n  selector: 'app-singlepost',\n  templateUrl: './singlepost.component.html',\n  styleUrls: ['./singlepost.component.css']\n})\nexport class SinglepostComponent implements OnInit {\n\n  // @Input('postEmitter') post: Post;\n  post:Post;\n\n  constructor(private blogService: BlogService, private route: ActivatedRoute) { }\n\n  \n  \n\n  ngOnInit() {\n    // this.blogService.getPostById(this.postId).subscribe(res => this.post = res);\n    this.blogService.getPostById(Number(this.route.snapshot.paramMap.get('postId'))).subscribe(data => this.post = data);\n\n    // // // // Add Resolver\n    // this.route.data.subscribe(\n    //   (data: Data) => {\n    //     this.post = data['post'];\n    //   }\n    // );\n\n    console.log(\"Single:\", this.post);\n  }\n\n  ngOnDestroy() {\n    // unsubscribe\n  }\n\n}\n"],"sourceRoot":"webpack:///","file":"blog-blog-module-es5.js"}