{"version":3,"sources":["./src/app/signup/page/page.component.html","./src/app/signup/signupform/signupform.component.html","./src/app/signup/signuplist/signuplist.component.html","./src/app/signup/page/page.component.css","./src/app/signup/page/page.component.ts","./src/app/signup/signup-routing.module.ts","./src/app/signup/signup.module.ts","./src/app/signup/signupform/signupform.component.css","./src/app/signup/signupform/signupform.component.ts","./src/app/signup/signuplist/signuplist.component.css","./src/app/signup/signuplist/signuplist.component.ts"],"names":[],"mappings":"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","file":"signup-signup-module-es2015.js","sourcesContent":["export default \"<div class=\\\"container\\\">\\n    <div class=\\\"card login-form\\\">\\n        <div class=\\\"card-body\\\">\\n            <h3 class=\\\"card-title text-center text-danger text-underline\\\">Sign Up to Join Accenture</h3>\\n            <app-signupform (PostData)=\\\"getRegisteredUser($event)\\\"></app-signupform>\\n        </div>\\n    </div>\\n    <!-- <app-signuplist [userList]=\\\"formUsers\\\"></app-signuplist> -->\\n    <button (click)=\\\"updateUser()\\\">View Updated Users</button>\\n    <div class=\\\"row\\\">\\n    </div>\\n</div>\"","export default \"<!-- <div class=\\\"card-text\\\" (scroll)=\\\"onScroll($event)\\\" style=\\\"height: 250px;\\\">\\n    <form [formGroup]=\\\"signUpForm\\\" (ngSubmit)=\\\"handleSubmit()\\\">\\n        <div class=\\\"form-group\\\">\\n            <label>Firstname</label>\\n            <input type=\\\"text\\\" id=\\\"firstname\\\" #fname class=\\\"form-control\\\"\\n                formControlName=\\\"firstname\\\" [ngClass]=\\\"{'is-invalid': submitted && f.firstname.errors }\\\" />\\n            <div *ngIf=\\\"submitted && f.firstname.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"f.firstname.errors.required\\\">First Name should not be empty!</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label>Lastname</label>\\n            <input type=\\\"text\\\" name=\\\"lastname\\\" class=\\\"form-control\\\"\\n                formControlName=\\\"lastname\\\" [ngClass]=\\\"{'is-invalid': submitted && f.lastname.errors }\\\" />\\n            <div *ngIf=\\\"submitted && f.lastname.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"f.lastname.errors.required\\\">Last Name should not be empty!</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label>Email</label>\\n            <input type=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control\\\"\\n                formControlName=\\\"useremail\\\" [ngClass]=\\\"{'is-invalid': submitted && f.useremail.errors }\\\" />\\n            <div *ngIf=\\\"submitted && f.useremail.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"f.useremail.errors.required\\\">Email should not be empty!</div>\\n                <div *ngIf=\\\"f.useremail.errors.email\\\">Please enter the valid email!</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label>Country</label>\\n            <select class=\\\"form-control\\\" formControlName=\\\"country\\\"\\n                [ngClass]=\\\"{'is-invalid': submitted && f.country.errors }\\\">\\n                <option value=\\\"\\\">...Select...</option>\\n                <option value=\\\"SG\\\">Singapore</option>\\n                <option value=\\\"IN\\\">India</option>\\n                <option value=\\\"USA\\\">United States</option>\\n            </select>\\n            <div *ngIf=\\\"submitted && f.country.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"f.country.errors.required\\\">Country should not be empty!</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label>Address</label>\\n            <textarea class=\\\"form-control\\\" formControlName=\\\"address\\\"\\n                [ngClass]=\\\"{'is-invalid': submitted && f.address.errors }\\\"></textarea>\\n            <div *ngIf=\\\"submitted && f.address.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"f.address.errors.required\\\">Country should not be empty!</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <input type=\\\"submit\\\" name=\\\"signup\\\" class=\\\"btn btn-danger float-end\\\" />\\n        </div>\\n    </form>\\n</div> -->\\n\\n\\n\\n\\n<div class=\\\"col-md-12\\\">\\n    <div class=\\\"card card-container\\\">\\n        <!-- <img id=\\\"profile-img\\\" src=\\\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\\\" class=\\\"profile-img-card\\\" /> -->\\n        <form *ngIf=\\\"!isSuccessful\\\" name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && onSubmit()\\\" #f=\\\"ngForm\\\" novalidate>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"username\\\">Username</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" [(ngModel)]=\\\"form.username\\\" required\\n                    minlength=\\\"3\\\" maxlength=\\\"20\\\" #username=\\\"ngModel\\\" />\\n                <div class=\\\"alert-danger\\\" *ngIf=\\\"f.submitted && username.invalid\\\">\\n                    <div *ngIf=\\\"username.errors.required\\\">Username is required</div>\\n                    <div *ngIf=\\\"username.errors.minlength\\\">\\n                        Username must be at least 3 characters\\n                    </div>\\n                    <div *ngIf=\\\"username.errors.maxlength\\\">\\n                        Username must be at most 20 characters\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"email\\\">Email</label>\\n                <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"form.email\\\" required email\\n                    #email=\\\"ngModel\\\" />\\n                <div class=\\\"alert-danger\\\" *ngIf=\\\"f.submitted && email.invalid\\\">\\n                    <div *ngIf=\\\"email.errors.required\\\">Email is required</div>\\n                    <div *ngIf=\\\"email.errors.email\\\">\\n                        Email must be a valid email address\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"password\\\">Password</label>\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"form.password\\\" required\\n                    minlength=\\\"6\\\" #password=\\\"ngModel\\\" />\\n                <div class=\\\"alert-danger\\\" *ngIf=\\\"f.submitted && password.invalid\\\">\\n                    <div *ngIf=\\\"password.errors.required\\\">Password is required</div>\\n                    <div *ngIf=\\\"password.errors.minlength\\\">\\n                        Password must be at least 6 characters\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <button class=\\\"btn btn-primary btn-block\\\">Sign Up</button>\\n            </div>\\n\\n            <div class=\\\"alert alert-warning\\\" *ngIf=\\\"f.submitted && isSignUpFailed\\\">\\n                Signup failed!<br />{{ errorMessage }}\\n            </div>\\n        </form>\\n\\n        <div class=\\\"alert alert-success\\\" *ngIf=\\\"isSuccessful\\\">\\n            Your registration is successful!\\n        </div>\\n    </div>\\n</div>\"","export default \"<p>signuplist works!</p>\\n\\n<table class=\\\"table\\\" *ngIf=\\\"UserList.length>0\\\">\\n    <thead>\\n        <tr>\\n            <th scope=\\\"col\\\">#</th>\\n            <th scope=\\\"col\\\">First Name</th>\\n            <th scope=\\\"col\\\">Last Name</th>\\n            <th scope=\\\"col\\\">Email</th>\\n            <th scope=\\\"col\\\">Country</th>\\n            <th scope=\\\"col\\\">Address</th>\\n        </tr>\\n    </thead>\\n    <tbody>\\n        <tr *ngFor=\\\"let user of UserList; let i=index;\\\">\\n            <th scope=\\\"row\\\">{{i+1}}</th>\\n            <td>{{user.firstname}}</td>\\n            <td>{{user.lastname}}</td>\\n            <td>{{user.email}}</td>\\n            <td>{{user.country}}</td>\\n            <td>{{user.address}}</td>\\n        </tr>\\n    </tbody>\\n</table>\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpZ251cC9wYWdlL3BhZ2UuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\nimport { FormUser, PageUser } from '../../_helpers/interfaces/userDetails';\n\n\n@Component({\n  selector: 'app-page',\n  templateUrl: './page.component.html',\n  styleUrls: ['./page.component.css']\n})\nexport class PageComponent implements OnInit {\n\n  formUsers: FormUser[];\n\n  submittedUser: FormUser;\n\n  PageUsers: PageUser[];\n\n  // usersFromChild=[];\n\n  // user = {\n  //   name:\"Alex\"\n  // }\n  // @ViewChild(SignupformComponent,{static: true}) child;\n  //@ViewChild('fname',{static: false,read:ElementRef}) firstname: ElementRef;\n  //@ViewChild('nameInput',{static: false,read:ElementRef}) someInput: ElementRef;\n\n  constructor() { }\n  ngOnInit(){\n    //console.log(this.child.usersData);\n    //this.firstname.nativeElement.style.border = \"3px dashed green\";\n  }\n\n  getRegisteredUser(event){\n    this.formUsers.push(event);\n    // console.log('List of registedred users');\n    // console.log(this.allUser);\n  }\n\n  ngAfterViewInit(){\n    // this.usersFromChild = this.child.message;\n\n    //this.someInput.nativeElement.value = \"Jugal\";\n    //this.firstname.nativeElement.style.border = \"3px dashed green\";\n  }\n  ngAfterViewChecked(){\n    // this.usersFromChild = this.child.usersData;\n    // console.log(this.usersFromChild);\n  }\n  updateUser(){\n    // this.user.name = \"Murali\";\n  }\n\n}\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { PageComponent } from \"./page/page.component\";\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'', component: PageComponent\r\n  }\r\n]\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class SignupRoutingModule {}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PageComponent } from './page/page.component';\nimport { SignupformComponent } from './signupform/signupform.component';\nimport { SignuplistComponent } from './signuplist/signuplist.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SignupRoutingModule } from './signup-routing.module';\n\n\n@NgModule({\n  declarations: [\n    PageComponent,\n    SignupformComponent,\n    SignuplistComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    SignupRoutingModule,\n    ReactiveFormsModule\n  ]\n})\nexport class SignupModule { }\n","export default \"label {\\r\\n  display: block;\\r\\n  margin-top: 10px;\\r\\n}\\r\\n\\r\\n.card-container.card {\\r\\n  max-width: 400px !important;\\r\\n  padding: 40px 40px;\\r\\n}\\r\\n\\r\\n.card {\\r\\n  background-color: #f7f7f7;\\r\\n  padding: 20px 25px 30px;\\r\\n  margin: 0 auto 25px;\\r\\n  margin-top: 50px;\\r\\n  border-radius: 2px;\\r\\n  box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\\r\\n}\\r\\n\\r\\n.profile-img-card {\\r\\n  width: 96px;\\r\\n  height: 96px;\\r\\n  margin: 0 auto 10px;\\r\\n  display: block;\\r\\n  border-radius: 50%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2lnbnVwL3NpZ251cGZvcm0vc2lnbnVwZm9ybS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBYztFQUNkLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLDJCQUEyQjtFQUMzQixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtFQUNuQixnQkFBZ0I7RUFHaEIsa0JBQWtCO0VBR2xCLDBDQUEwQztBQUM1Qzs7QUFFQTtFQUNFLFdBQVc7RUFDWCxZQUFZO0VBQ1osbUJBQW1CO0VBQ25CLGNBQWM7RUFHZCxrQkFBa0I7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC9zaWdudXAvc2lnbnVwZm9ybS9zaWdudXBmb3JtLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJsYWJlbCB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgbWFyZ2luLXRvcDogMTBweDtcclxufVxyXG5cclxuLmNhcmQtY29udGFpbmVyLmNhcmQge1xyXG4gIG1heC13aWR0aDogNDAwcHggIWltcG9ydGFudDtcclxuICBwYWRkaW5nOiA0MHB4IDQwcHg7XHJcbn1cclxuXHJcbi5jYXJkIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjdmN2Y3O1xyXG4gIHBhZGRpbmc6IDIwcHggMjVweCAzMHB4O1xyXG4gIG1hcmdpbjogMCBhdXRvIDI1cHg7XHJcbiAgbWFyZ2luLXRvcDogNTBweDtcclxuICAtbW96LWJvcmRlci1yYWRpdXM6IDJweDtcclxuICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDJweDtcclxuICBib3JkZXItcmFkaXVzOiAycHg7XHJcbiAgLW1vei1ib3gtc2hhZG93OiAwcHggMnB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMyk7XHJcbiAgLXdlYmtpdC1ib3gtc2hhZG93OiAwcHggMnB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMyk7XHJcbiAgYm94LXNoYWRvdzogMHB4IDJweCAycHggcmdiYSgwLCAwLCAwLCAwLjMpO1xyXG59XHJcblxyXG4ucHJvZmlsZS1pbWctY2FyZCB7XHJcbiAgd2lkdGg6IDk2cHg7XHJcbiAgaGVpZ2h0OiA5NnB4O1xyXG4gIG1hcmdpbjogMCBhdXRvIDEwcHg7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgLW1vei1ib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit, Output,EventEmitter,ViewChild,ElementRef,ChangeDetectionStrategy,DoCheck,OnChanges, Input } from '@angular/core';\nimport { FormBuilder,FormControl,FormGroup,Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/_helpers/loginservices/auth.service';\n\nimport { FormUser } from '../../_helpers/interfaces/userDetails';\n\n@Component({\n  selector: 'app-signupform',\n  templateUrl: './signupform.component.html',\n  styleUrls: ['./signupform.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SignupformComponent implements OnInit {\n  // signUpForm: FormGroup;\n  // submitted:boolean;\n  // userData: FormUser;\n  // message: string = \"This is child Message\";\n  // @Output() PostData = new EventEmitter<FormUser>();\n  // @Input('formuser') formuser;\n  // @ViewChild('fname',{static: false,read:ElementRef}) firstname: ElementRef;\n  // constructor(private formBuilder: FormBuilder) {\n  //   this.submitted = false;\n  //  }\n\n  form: any = {};\n  isSuccessful = false;\n  isSignUpFailed = false;\n  errorMsg = '';\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit() {\n\n    // this.signUpForm = this.formBuilder.group({\n    //   username:['',Validators.required],\n    //   email:['',[Validators.required,Validators.email]],\n    //   password:['',Validators.required]\n    // });\n\n    // console.log(\"NgOnInit()\");\n\n  }\n\n  get f(){\n    return this.form.controls;\n  }\n\n  onSubmit() {\n    this.authService.register(this.form).subscribe(\n      data => {\n        console.log(data);\n        this.isSuccessful = true;\n        this.isSignUpFailed = false;\n      }, err => {\n        this.errorMsg = err.error.message;\n        this.isSignUpFailed = true;\n      }\n    );\n  }\n\n  // handleSubmit(){\n  //   this.submitted = true;\n  //   //console.log(this.registerForm.value);\n  //   this.userData = this.signUpForm.value;\n\n  //   this.message = \"This is child Message Updated\";\n\n  //   //console.log(this.usersData);\n  //   this.PostData.emit(this.userData)\n  // }\n  ngOnChanges(){\n    console.log(\"CHANGES\")\n  }\n  ngDoCheck(){\n    console.log(\"DO CHECK\")\n  }\n  ngAfterViewInit(){\n    // this.firstname.nativeElement.style.border = \"3px dashed green\";\n  }\n\n  onScroll(){\n    console.log('On scroll in Signup Component');\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpZ251cC9zaWdudXBsaXN0L3NpZ251cGxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, Input, OnInit } from '@angular/core';\nimport { PageUser } from 'src/app/_helpers/interfaces/userDetails';\n\n@Component({\n  selector: 'app-signuplist',\n  templateUrl: './signuplist.component.html',\n  styleUrls: ['./signuplist.component.css']\n})\nexport class SignuplistComponent implements OnInit {\n\n  UserList: PageUser[];\n  constructor() {\n    console.log(this.UserList);\n  }\n\n  ngOnInit() {\n    //console.log(this.UserList);\n    //alert('ngOnInit');\n\n  }\n\n  // To Edit\n  // ngOnInit() {\n  //   this.userService.getAllUsers().subscribe(res => {\n  //     console.log(\"All Users \", res);\n  //     this.allUsers = res;\n  //     this.loading = res.loading;\n  //     this.errors = res.errors;\n  //   });\n  // }\n\n  // ngOnDestroy() {\n  //   this.userService.getAllUsers().unsubscribe();\n  // }\n\n  ngAfterViewChecked(){\n    //alert('ngAfterViewChecked');\n    if(this.UserList.length>0){\n      console.log(this.UserList);\n    }\n  }\n\n}\n"],"sourceRoot":"webpack:///"}