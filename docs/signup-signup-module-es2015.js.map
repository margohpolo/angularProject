{"version":3,"sources":["./src/app/signup/page/page.component.html","./src/app/signup/signupform/signupform.component.html","./src/app/signup/signuplist/signuplist.component.html","./src/app/signup/page/page.component.css","./src/app/signup/page/page.component.ts","./src/app/signup/signup-routing.module.ts","./src/app/signup/signup.module.ts","./src/app/signup/signupform/signupform.component.css","./src/app/signup/signupform/signupform.component.ts","./src/app/signup/signuplist/signuplist.component.css","./src/app/signup/signuplist/signuplist.component.ts"],"names":[],"mappings":"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","file":"signup-signup-module-es2015.js","sourcesContent":["export default \"<div class=\\\"container\\\">\\n    <div class=\\\"card login-form\\\">\\n        <div class=\\\"card-body\\\">\\n            <h3 class=\\\"card-title text-center text-danger text-underline\\\">Sign Up to Join Accenture</h3>\\n            <app-signupform (PostData)=\\\"getRegisteredUser($event)\\\"></app-signupform>\\n        </div>\\n    </div>\\n    <app-signuplist [userList]=\\\"formUsers\\\"></app-signuplist>\\n    <button (click)=\\\"updateUser()\\\">View Updated Users</button>\\n    <div class=\\\"row\\\">\\n    </div>\\n</div>\"","export default \"<div class=\\\"card-text\\\" (scroll)=\\\"onScroll($event)\\\" style=\\\"height: 250px;\\\">\\n    <form [formGroup]=\\\"signUpForm\\\" (ngSubmit)=\\\"handleSubmit()\\\">\\n        <div class=\\\"form-group\\\">\\n            <label>Firstname</label>\\n            <input type=\\\"text\\\" id=\\\"firstname\\\" #fname class=\\\"form-control\\\"\\n                formControlName=\\\"firstname\\\" [ngClass]=\\\"{'is-invalid': submitted && f.firstname.errors }\\\" />\\n            <div *ngIf=\\\"submitted && f.firstname.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"f.firstname.errors.required\\\">First Name should not be empty!</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label>Lastname</label>\\n            <input type=\\\"text\\\" name=\\\"lastname\\\" class=\\\"form-control\\\"\\n                formControlName=\\\"lastname\\\" [ngClass]=\\\"{'is-invalid': submitted && f.lastname.errors }\\\" />\\n            <div *ngIf=\\\"submitted && f.lastname.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"f.lastname.errors.required\\\">Last Name should not be empty!</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label>Email</label>\\n            <input type=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control\\\"\\n                formControlName=\\\"useremail\\\" [ngClass]=\\\"{'is-invalid': submitted && f.useremail.errors }\\\" />\\n            <div *ngIf=\\\"submitted && f.useremail.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"f.useremail.errors.required\\\">Email should not be empty!</div>\\n                <div *ngIf=\\\"f.useremail.errors.email\\\">Please enter the valid email!</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label>Country</label>\\n            <select class=\\\"form-control\\\" formControlName=\\\"country\\\"\\n                [ngClass]=\\\"{'is-invalid': submitted && f.country.errors }\\\">\\n                <option value=\\\"\\\">...Select...</option>\\n                <option value=\\\"SG\\\">Singapore</option>\\n                <option value=\\\"IN\\\">India</option>\\n                <option value=\\\"USA\\\">United States</option>\\n            </select>\\n            <div *ngIf=\\\"submitted && f.country.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"f.country.errors.required\\\">Country should not be empty!</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label>Address</label>\\n            <textarea class=\\\"form-control\\\" formControlName=\\\"address\\\"\\n                [ngClass]=\\\"{'is-invalid': submitted && f.address.errors }\\\"></textarea>\\n            <div *ngIf=\\\"submitted && f.address.errors\\\" class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"f.address.errors.required\\\">Country should not be empty!</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <input type=\\\"submit\\\" name=\\\"signup\\\" class=\\\"btn btn-danger float-end\\\" />\\n        </div>\\n    </form>\\n</div>\"","export default \"<p>signuplist works!</p>\\n\\n<table class=\\\"table\\\" *ngIf=\\\"UserList.length>0\\\">\\n    <thead>\\n        <tr>\\n            <th scope=\\\"col\\\">#</th>\\n            <th scope=\\\"col\\\">First Name</th>\\n            <th scope=\\\"col\\\">Last Name</th>\\n            <th scope=\\\"col\\\">Email</th>\\n            <th scope=\\\"col\\\">Country</th>\\n            <th scope=\\\"col\\\">Address</th>\\n        </tr>\\n    </thead>\\n    <tbody>\\n        <tr *ngFor=\\\"let user of UserList; let i=index;\\\">\\n            <th scope=\\\"row\\\">{{i+1}}</th>\\n            <td>{{user.firstname}}</td>\\n            <td>{{user.lastname}}</td>\\n            <td>{{user.email}}</td>\\n            <td>{{user.country}}</td>\\n            <td>{{user.address}}</td>\\n        </tr>\\n    </tbody>\\n</table>\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpZ251cC9wYWdlL3BhZ2UuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\nimport { FormUser, PageUser } from '../../_helpers/interfaces/userDetails';\n\n\n@Component({\n  selector: 'app-page',\n  templateUrl: './page.component.html',\n  styleUrls: ['./page.component.css']\n})\nexport class PageComponent implements OnInit {\n\n  formUsers: FormUser[];\n\n  submittedUser: FormUser;\n\n  PageUsers: PageUser[];\n\n  // usersFromChild=[];\n\n  // user = {\n  //   name:\"Alex\"\n  // }\n  // @ViewChild(SignupformComponent,{static: true}) child;\n  //@ViewChild('fname',{static: false,read:ElementRef}) firstname: ElementRef;\n  //@ViewChild('nameInput',{static: false,read:ElementRef}) someInput: ElementRef;\n\n  constructor() { }\n  ngOnInit(){\n    //console.log(this.child.usersData);\n    //this.firstname.nativeElement.style.border = \"3px dashed green\";\n  }\n\n  getRegisteredUser(event){\n    this.formUsers.push(event);\n    // console.log('List of registedred users');\n    // console.log(this.allUser);\n  }\n\n  ngAfterViewInit(){\n    // this.usersFromChild = this.child.message;\n\n    //this.someInput.nativeElement.value = \"Jugal\";\n    //this.firstname.nativeElement.style.border = \"3px dashed green\";\n  }\n  ngAfterViewChecked(){\n    // this.usersFromChild = this.child.usersData;\n    // console.log(this.usersFromChild);\n  }\n  updateUser(){\n    // this.user.name = \"Murali\";\n  }\n\n}\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { PageComponent } from \"./page/page.component\";\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'', component: PageComponent\r\n  }\r\n]\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class SignupRoutingModule {}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PageComponent } from './page/page.component';\nimport { SignupformComponent } from './signupform/signupform.component';\nimport { SignuplistComponent } from './signuplist/signuplist.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SignupRoutingModule } from './signup-routing.module';\n\n\n@NgModule({\n  declarations: [\n    PageComponent,\n    SignupformComponent,\n    SignuplistComponent\n  ],\n  imports: [\n    CommonModule,\n    SignupRoutingModule,\n    ReactiveFormsModule\n  ]\n})\nexport class SignupModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpZ251cC9zaWdudXBmb3JtL3NpZ251cGZvcm0uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, Output,EventEmitter,ViewChild,ElementRef,ChangeDetectionStrategy,DoCheck,OnChanges, Input } from '@angular/core';\nimport { FormBuilder,FormControl,FormGroup,Validators } from '@angular/forms';\n\nimport { FormUser } from '../../_helpers/interfaces/userDetails';\n\n@Component({\n  selector: 'app-signupform',\n  templateUrl: './signupform.component.html',\n  styleUrls: ['./signupform.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SignupformComponent implements OnInit {\n  signUpForm: FormGroup;\n  submitted:boolean;\n  userData: FormUser;\n  message: string = \"This is child Message\";\n  @Output() PostData = new EventEmitter<FormUser>();\n  @Input('formuser') formuser;\n  // @ViewChild('fname',{static: false,read:ElementRef}) firstname: ElementRef;\n  constructor(private formBuilder: FormBuilder) {\n    this.submitted = false;\n   }\n\n  ngOnInit() {\n\n    this.signUpForm = this.formBuilder.group({\n      firstname:['',Validators.required],\n      lastname:['',Validators.required],\n      useremail:['',[Validators.required,Validators.email]],\n      country:['SG',Validators.required],\n      address:['',Validators.required]\n    });\n\n    console.log(\"NgOnInit()\");\n\n  }\n\n  get f(){\n    return this.signUpForm.controls;\n  }\n\n\n  handleSubmit(){\n    this.submitted = true;\n    //console.log(this.registerForm.value);\n    this.userData = this.signUpForm.value;\n\n    this.message = \"This is child Message Updated\";\n\n    //console.log(this.usersData);\n    this.PostData.emit(this.userData)\n  }\n  ngOnChanges(){\n    console.log(\"CHANGES\")\n  }\n  ngDoCheck(){\n    console.log(\"DO CHECK\")\n  }\n  ngAfterViewInit(){\n    // this.firstname.nativeElement.style.border = \"3px dashed green\";\n  }\n\n  onScroll(){\n    console.log('On scroll in Signup Component');\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpZ251cC9zaWdudXBsaXN0L3NpZ251cGxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, Input, OnInit } from '@angular/core';\nimport { PageUser } from 'src/app/_helpers/interfaces/userDetails';\n\n@Component({\n  selector: 'app-signuplist',\n  templateUrl: './signuplist.component.html',\n  styleUrls: ['./signuplist.component.css']\n})\nexport class SignuplistComponent implements OnInit {\n\n  UserList: PageUser[];\n  constructor() {\n    console.log(this.UserList);\n  }\n\n  ngOnInit() {\n    //console.log(this.UserList);\n    //alert('ngOnInit');\n\n  }\n\n  // To Edit\n  // ngOnInit() {\n  //   this.userService.getAllUsers().subscribe(res => {\n  //     console.log(\"All Users \", res);\n  //     this.allUsers = res;\n  //     this.loading = res.loading;\n  //     this.errors = res.errors;\n  //   });\n  // }\n\n  // ngOnDestroy() {\n  //   this.userService.getAllUsers().unsubscribe();\n  // }\n\n  ngAfterViewChecked(){\n    //alert('ngAfterViewChecked');\n    if(this.UserList.length>0){\n      console.log(this.UserList);\n    }\n  }\n\n}\n"],"sourceRoot":"webpack:///"}