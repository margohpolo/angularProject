{"version":3,"sources":["node_modules/ngx-echarts/fesm2015/ngx-echarts.js","src/app/final-test/final-test.component.html","src/app/final-test/ft-board-admin/ft-board-admin.component.html","src/app/final-test/ft-board-admin/ft-board-chart/ft-board-chart.component.html","src/app/final-test/ft-board-user/ft-board-user.component.html","src/app/final-test/ft-login/ft-login.component.html","src/app/final-test/ft-signupform/ft-signupform.component.html","src/app/final-test/ft-users/users.component.html","node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","src/app/final-test/final-test-routing.module.ts","src/app/final-test/final-test.component.css","src/app/final-test/final-test.component.ts","src/app/final-test/final-test.module.ts","src/app/final-test/ft-board-admin/ft-board-admin.component.css","src/app/final-test/ft-board-admin/ft-board-admin.component.ts","src/app/final-test/ft-board-admin/ft-board-chart/ft-board-chart.component.css","src/app/final-test/ft-board-admin/ft-board-chart/ft-board-chart.component.ts","src/app/final-test/ft-board-user/ft-board-user.component.css","src/app/final-test/ft-board-user/ft-board-user.component.ts","src/app/final-test/ft-login/ft-login.component.css","src/app/final-test/ft-login/ft-login.component.ts","src/app/final-test/ft-loginservices/ft-auth.service.ts","src/app/final-test/ft-loginservices/ft-token-service.service.ts","src/app/final-test/ft-loginservices/ft-user.service.ts","src/app/final-test/ft-signupform/ft-signupform.component.css","src/app/final-test/ft-signupform/ft-signupform.component.ts","src/app/final-test/ft-users/user.service.ts","src/app/final-test/ft-users/users.component.css","src/app/final-test/ft-users/users.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { __awaiter, __decorate, __param } from 'tslib';\nimport { InjectionToken, EventEmitter, Inject, ElementRef, NgZone, Input, Output, Directive, NgModule } from '@angular/core';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport { of, EMPTY, Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\nclass ChangeFilter {\n    constructor(changes) {\n        this.changes = changes;\n    }\n    static of(changes) {\n        return new ChangeFilter(changes);\n    }\n    notEmpty(key) {\n        if (this.changes[key]) {\n            const value = this.changes[key].currentValue;\n            if (value !== undefined && value !== null) {\n                return of(value);\n            }\n        }\n        return EMPTY;\n    }\n    has(key) {\n        if (this.changes[key]) {\n            const value = this.changes[key].currentValue;\n            return of(value);\n        }\n        return EMPTY;\n    }\n    notFirst(key) {\n        if (this.changes[key] && !this.changes[key].isFirstChange()) {\n            const value = this.changes[key].currentValue;\n            return of(value);\n        }\n        return EMPTY;\n    }\n    notFirstAndEmpty(key) {\n        if (this.changes[key] && !this.changes[key].isFirstChange()) {\n            const value = this.changes[key].currentValue;\n            if (value !== undefined && value !== null) {\n                return of(value);\n            }\n        }\n        return EMPTY;\n    }\n}\n\nconst NGX_ECHARTS_CONFIG = new InjectionToken('NGX_ECHARTS_CONFIG');\nlet NgxEchartsDirective = class NgxEchartsDirective {\n    constructor(config, el, ngZone) {\n        this.el = el;\n        this.ngZone = ngZone;\n        this.autoResize = true;\n        this.loadingType = 'default';\n        // ngx-echarts events\n        this.chartInit = new EventEmitter();\n        this.optionsError = new EventEmitter();\n        // echarts mouse events\n        this.chartClick = this.createLazyEvent('click');\n        this.chartDblClick = this.createLazyEvent('dblclick');\n        this.chartMouseDown = this.createLazyEvent('mousedown');\n        this.chartMouseMove = this.createLazyEvent('mousemove');\n        this.chartMouseUp = this.createLazyEvent('mouseup');\n        this.chartMouseOver = this.createLazyEvent('mouseover');\n        this.chartMouseOut = this.createLazyEvent('mouseout');\n        this.chartGlobalOut = this.createLazyEvent('globalout');\n        this.chartContextMenu = this.createLazyEvent('contextmenu');\n        // echarts mouse events\n        this.chartLegendSelectChanged = this.createLazyEvent('legendselectchanged');\n        this.chartLegendSelected = this.createLazyEvent('legendselected');\n        this.chartLegendUnselected = this.createLazyEvent('legendunselected');\n        this.chartLegendScroll = this.createLazyEvent('legendscroll');\n        this.chartDataZoom = this.createLazyEvent('datazoom');\n        this.chartDataRangeSelected = this.createLazyEvent('datarangeselected');\n        this.chartTimelineChanged = this.createLazyEvent('timelinechanged');\n        this.chartTimelinePlayChanged = this.createLazyEvent('timelineplaychanged');\n        this.chartRestore = this.createLazyEvent('restore');\n        this.chartDataViewChanged = this.createLazyEvent('dataviewchanged');\n        this.chartMagicTypeChanged = this.createLazyEvent('magictypechanged');\n        this.chartPieSelectChanged = this.createLazyEvent('pieselectchanged');\n        this.chartPieSelected = this.createLazyEvent('pieselected');\n        this.chartPieUnselected = this.createLazyEvent('pieunselected');\n        this.chartMapSelectChanged = this.createLazyEvent('mapselectchanged');\n        this.chartMapSelected = this.createLazyEvent('mapselected');\n        this.chartMapUnselected = this.createLazyEvent('mapunselected');\n        this.chartAxisAreaSelected = this.createLazyEvent('axisareaselected');\n        this.chartFocusNodeAdjacency = this.createLazyEvent('focusnodeadjacency');\n        this.chartUnfocusNodeAdjacency = this.createLazyEvent('unfocusnodeadjacency');\n        this.chartBrush = this.createLazyEvent('brush');\n        this.chartBrushEnd = this.createLazyEvent('brushend');\n        this.chartBrushSelected = this.createLazyEvent('brushselected');\n        this.chartRendered = this.createLazyEvent('rendered');\n        this.chartFinished = this.createLazyEvent('finished');\n        this.animationFrameID = null;\n        this.echarts = config.echarts;\n    }\n    ngOnChanges(changes) {\n        const filter = ChangeFilter.of(changes);\n        filter.notFirstAndEmpty('options').subscribe((opt) => this.onOptionsChange(opt));\n        filter.notFirstAndEmpty('merge').subscribe((opt) => this.setOption(opt));\n        filter.has('loading').subscribe((v) => this.toggleLoading(!!v));\n        filter.notFirst('theme').subscribe(() => this.refreshChart());\n    }\n    ngOnInit() {\n        if (this.autoResize) {\n            this.resizeSub = new ResizeObserver(() => {\n                this.animationFrameID = window.requestAnimationFrame(() => this.resize());\n            });\n            this.resizeSub.observe(this.el.nativeElement);\n        }\n    }\n    ngOnDestroy() {\n        if (this.resizeSub) {\n            this.resizeSub.unobserve(this.el.nativeElement);\n            window.cancelAnimationFrame(this.animationFrameID);\n        }\n        this.dispose();\n    }\n    ngAfterViewInit() {\n        setTimeout(() => this.initChart());\n    }\n    dispose() {\n        if (this.chart) {\n            this.chart.dispose();\n            this.chart = null;\n        }\n    }\n    /**\n     * resize chart\n     */\n    resize() {\n        if (this.chart) {\n            this.chart.resize();\n        }\n    }\n    toggleLoading(loading) {\n        if (this.chart) {\n            loading\n                ? this.chart.showLoading(this.loadingType, this.loadingOpts)\n                : this.chart.hideLoading();\n        }\n    }\n    setOption(option, opts) {\n        if (this.chart) {\n            try {\n                this.chart.setOption(option, opts);\n            }\n            catch (e) {\n                console.error(e);\n                this.optionsError.emit(e);\n            }\n        }\n    }\n    /**\n     * dispose old chart and create a new one.\n     */\n    refreshChart() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.dispose();\n            yield this.initChart();\n        });\n    }\n    createChart() {\n        const dom = this.el.nativeElement;\n        if (window && window.getComputedStyle) {\n            const prop = window.getComputedStyle(dom, null).getPropertyValue('height');\n            if ((!prop || prop === '0px') && (!dom.style.height || dom.style.height === '0px')) {\n                dom.style.height = '400px';\n            }\n        }\n        // here a bit tricky: we check if the echarts module is provided as function returning native import('...') then use the promise\n        // otherwise create the function that imitates behaviour above with a provided as is module\n        return this.ngZone.runOutsideAngular(() => {\n            const load = typeof this.echarts === 'function' ? this.echarts : () => Promise.resolve(this.echarts);\n            return load().then(({ init }) => init(dom, this.theme, this.initOpts));\n        });\n    }\n    initChart() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.onOptionsChange(this.options);\n            if (this.merge && this.chart) {\n                this.setOption(this.merge);\n            }\n        });\n    }\n    onOptionsChange(opt) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!opt) {\n                return;\n            }\n            if (this.chart) {\n                this.setOption(this.options, true);\n            }\n            else {\n                this.chart = yield this.createChart();\n                this.chartInit.emit(this.chart);\n                this.setOption(this.options, true);\n            }\n        });\n    }\n    // allows to lazily bind to only those events that are requested through the `@Output` by parent components\n    // see https://stackoverflow.com/questions/51787972/optimal-reentering-the-ngzone-from-eventemitter-event for more info\n    createLazyEvent(eventName) {\n        return this.chartInit.pipe(switchMap((chart) => new Observable((observer) => {\n            chart.on(eventName, (data) => this.ngZone.run(() => observer.next(data)));\n            return () => chart.off(eventName);\n        })));\n    }\n};\nNgxEchartsDirective.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [NGX_ECHARTS_CONFIG,] }] },\n    { type: ElementRef },\n    { type: NgZone }\n];\n__decorate([\n    Input()\n], NgxEchartsDirective.prototype, \"options\", void 0);\n__decorate([\n    Input()\n], NgxEchartsDirective.prototype, \"theme\", void 0);\n__decorate([\n    Input()\n], NgxEchartsDirective.prototype, \"loading\", void 0);\n__decorate([\n    Input()\n], NgxEchartsDirective.prototype, \"initOpts\", void 0);\n__decorate([\n    Input()\n], NgxEchartsDirective.prototype, \"merge\", void 0);\n__decorate([\n    Input()\n], NgxEchartsDirective.prototype, \"autoResize\", void 0);\n__decorate([\n    Input()\n], NgxEchartsDirective.prototype, \"loadingType\", void 0);\n__decorate([\n    Input()\n], NgxEchartsDirective.prototype, \"loadingOpts\", void 0);\n__decorate([\n    Output()\n], NgxEchartsDirective.prototype, \"chartInit\", void 0);\n__decorate([\n    Output()\n], NgxEchartsDirective.prototype, \"optionsError\", void 0);\n__decorate([\n    Output()\n], NgxEchartsDirective.prototype, \"chartClick\", void 0);\n__decorate([\n    Output()\n], NgxEchartsDirective.prototype, \"chartDblClick\", void 0);\n__decorate([\n    Output()\n], NgxEchartsDirective.prototype, \"chartMouseDown\", void 0);\n__decorate([\n    Output()\n], NgxEchartsDirective.prototype, \"chartMouseMove\", void 0);\n__decorate([\n    Output()\n], NgxEchartsDirective.prototype, \"chartMouseUp\", void 0);\n__decorate([\n    Output()\n], NgxEchartsDirective.prototype, \"chartMouseOver\", void 0);\n__decorate([\n    Output()\n], NgxEchartsDirective.prototype, \"chartMouseOut\", void 0);\n__decorate([\n    Output()\n], NgxEchartsDirective.prototype, \"chartGlobalOut\", void 0);\n__decorate([\n    Output()\n], NgxEchartsDirective.prototype, \"chartContextMenu\", void 0);\n__decorate([\n    Output()\n], NgxEchartsDirective.prototype, \"chartLegendSelectChanged\", void 0);\n__decorate([\n    Output()\n], NgxEchartsDirective.prototype, \"chartLegendSelected\", void 0);\n__decorate([\n    Output()\n], NgxEchartsDirective.prototype, \"chartLegendUnselected\", void 0);\n__decorate([\n    Output()\n], NgxEchartsDirective.prototype, \"chartLegendScroll\", void 0);\n__decorate([\n    Output()\n], NgxEchartsDirective.prototype, \"chartDataZoom\", void 0);\n__decorate([\n    Output()\n], NgxEchartsDirective.prototype, \"chartDataRangeSelected\", void 0);\n__decorate([\n    Output()\n], NgxEchartsDirective.prototype, \"chartTimelineChanged\", void 0);\n__decorate([\n    Output()\n], NgxEchartsDirective.prototype, \"chartTimelinePlayChanged\", void 0);\n__decorate([\n    Output()\n], NgxEchartsDirective.prototype, \"chartRestore\", void 0);\n__decorate([\n    Output()\n], NgxEchartsDirective.prototype, \"chartDataViewChanged\", void 0);\n__decorate([\n    Output()\n], NgxEchartsDirective.prototype, \"chartMagicTypeChanged\", void 0);\n__decorate([\n    Output()\n], NgxEchartsDirective.prototype, \"chartPieSelectChanged\", void 0);\n__decorate([\n    Output()\n], NgxEchartsDirective.prototype, \"chartPieSelected\", void 0);\n__decorate([\n    Output()\n], NgxEchartsDirective.prototype, \"chartPieUnselected\", void 0);\n__decorate([\n    Output()\n], NgxEchartsDirective.prototype, \"chartMapSelectChanged\", void 0);\n__decorate([\n    Output()\n], NgxEchartsDirective.prototype, \"chartMapSelected\", void 0);\n__decorate([\n    Output()\n], NgxEchartsDirective.prototype, \"chartMapUnselected\", void 0);\n__decorate([\n    Output()\n], NgxEchartsDirective.prototype, \"chartAxisAreaSelected\", void 0);\n__decorate([\n    Output()\n], NgxEchartsDirective.prototype, \"chartFocusNodeAdjacency\", void 0);\n__decorate([\n    Output()\n], NgxEchartsDirective.prototype, \"chartUnfocusNodeAdjacency\", void 0);\n__decorate([\n    Output()\n], NgxEchartsDirective.prototype, \"chartBrush\", void 0);\n__decorate([\n    Output()\n], NgxEchartsDirective.prototype, \"chartBrushEnd\", void 0);\n__decorate([\n    Output()\n], NgxEchartsDirective.prototype, \"chartBrushSelected\", void 0);\n__decorate([\n    Output()\n], NgxEchartsDirective.prototype, \"chartRendered\", void 0);\n__decorate([\n    Output()\n], NgxEchartsDirective.prototype, \"chartFinished\", void 0);\nNgxEchartsDirective = __decorate([\n    Directive({\n        selector: 'echarts, [echarts]',\n        exportAs: 'echarts',\n    }),\n    __param(0, Inject(NGX_ECHARTS_CONFIG))\n], NgxEchartsDirective);\n\nvar NgxEchartsModule_1;\nlet NgxEchartsModule = NgxEchartsModule_1 = class NgxEchartsModule {\n    static forRoot(config) {\n        return {\n            ngModule: NgxEchartsModule_1,\n            providers: [{ provide: NGX_ECHARTS_CONFIG, useValue: config }],\n        };\n    }\n    static forChild() {\n        return {\n            ngModule: NgxEchartsModule_1,\n        };\n    }\n};\nNgxEchartsModule = NgxEchartsModule_1 = __decorate([\n    NgModule({\n        imports: [],\n        declarations: [NgxEchartsDirective],\n        exports: [NgxEchartsDirective],\n    })\n], NgxEchartsModule);\n\n/*\n * Public API Surface of ngx-echarts\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NGX_ECHARTS_CONFIG, NgxEchartsDirective, NgxEchartsModule };\n//# sourceMappingURL=ngx-echarts.js.map\n","export default \"<app-ft-login></app-ft-login>\"","export default \"<div class=\\\"container\\\">\\r\\n  <section class=\\\"row\\\">\\r\\n    <a>{{content}}</a>\\r\\n  </section>\\r\\n  <div class=\\\"row col-md-12\\\">\\r\\n    <h3>Admin Dashboard</h3>\\r\\n    <app-ft-board-chart></app-ft-board-chart>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<h3><em>Chart</em></h3>\\n<br />\\n<div echarts [options]=\\\"options\\\" class=\\\"demo-chart\\\"></div>\"","export default \"<div class=\\\"container\\\">\\r\\n  <header class=\\\"jumbotron\\\">\\r\\n    <p>{{ content }}</p>\\r\\n  </header>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"col-md-12\\\">\\n    <div class=\\\"card card-container\\\">\\n        <form *ngIf=\\\"!isLoggedIn\\\" name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && onSubmit()\\\" #f=\\\"ngForm\\\" novalidate>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"username\\\">Username</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" [(ngModel)]=\\\"form.username\\\" required\\n                    #username=\\\"ngModel\\\" />\\n                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"f.submitted && username.invalid\\\">\\n                    Username is required!\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"password\\\">Password</label>\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"form.password\\\" required\\n                    minlength=\\\"6\\\" #password=\\\"ngModel\\\" />\\n                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"f.submitted && password.invalid\\\">\\n                    <div *ngIf=\\\"password.errors.required\\\">Password is required</div>\\n                    <div *ngIf=\\\"password.errors.minlength\\\">\\n                        Password must be at least 6 characters\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <button class=\\\"btn btn-primary btn-block\\\">\\n                    Login\\n                </button>\\n            </div>\\n            <div class=\\\"sign-up\\\">\\n                Don't have an account? <a href=\\\"#\\\" routerLink=\\\"/final-test/ft-signup\\\">Create One</a>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"f.submitted && isLoginFailed\\\">\\n                    Login failed: {{ errorMessage }}\\n                </div>\\n            </div>\\n        </form>\\n\\n        <div class=\\\"alert alert-success\\\" *ngIf=\\\"isLoggedIn\\\">\\n            Logged in as {{ roles }}.\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"col-md-12\\\">\\n    <div class=\\\"card card-container\\\">\\n        <form *ngIf=\\\"!isSuccessful\\\" name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && onSubmit()\\\" #f=\\\"ngForm\\\" novalidate>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"username\\\">Username</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" [(ngModel)]=\\\"form.username\\\" required\\n                    minlength=\\\"3\\\" maxlength=\\\"20\\\" #username=\\\"ngModel\\\" />\\n                <div class=\\\"alert-danger\\\" *ngIf=\\\"f.submitted && username.invalid\\\">\\n                    <div *ngIf=\\\"username.errors.required\\\">Username is required</div>\\n                    <div *ngIf=\\\"username.errors.minlength\\\">\\n                        Username must be at least 3 characters\\n                    </div>\\n                    <div *ngIf=\\\"username.errors.maxlength\\\">\\n                        Username must be at most 20 characters\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"email\\\">Email</label>\\n                <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"form.email\\\" required email\\n                    #email=\\\"ngModel\\\" />\\n                <div class=\\\"alert-danger\\\" *ngIf=\\\"f.submitted && email.invalid\\\">\\n                    <div *ngIf=\\\"email.errors.required\\\">Email is required</div>\\n                    <div *ngIf=\\\"email.errors.email\\\">\\n                        Email must be a valid email address\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"password\\\">Password</label>\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"form.password\\\" required\\n                    minlength=\\\"6\\\" #password=\\\"ngModel\\\" />\\n                <div class=\\\"alert-danger\\\" *ngIf=\\\"f.submitted && password.invalid\\\">\\n                    <div *ngIf=\\\"password.errors.required\\\">Password is required</div>\\n                    <div *ngIf=\\\"password.errors.minlength\\\">\\n                        Password must be at least 6 characters\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <button class=\\\"btn btn-primary btn-block\\\">Sign Up</button>\\n            </div>\\n\\n            <div class=\\\"alert alert-warning\\\" *ngIf=\\\"f.submitted && isSignUpFailed\\\">\\n                Signup failed!<br />{{ errorMessage }}\\n            </div>\\n        </form>\\n\\n        <div class=\\\"alert alert-success\\\" *ngIf=\\\"isSuccessful\\\">\\n            Your registration is successful!\\n        </div>\\n    </div>\\n</div>\"","export default \"<table class=\\\"table table-light\\\">\\n    <thead class=\\\"table-light\\\">\\n        <tr>\\n            <th scope=\\\"col\\\">Id</th>\\n            <th scope=\\\"col\\\">Name</th>\\n            <th scope=\\\"col\\\">UserName</th>\\n            <th scope=\\\"col\\\">Email</th>\\n            <th scope=\\\"col\\\"><button type=\\\"button\\\" class=\\\"btn btn-dark\\\" data-bs-toggle=\\\"modal\\\" data-bs-target=\\\"usersmodal\\\" (click)=\\\"addUser()\\\">Add User</button></th>\\n        </tr>\\n    </thead>\\n    <tbody>\\n        <tr *ngFor=\\\"let user of (allUser$ | async)\\\">\\n            <th scope=\\\"row\\\">{{ user.id }}</th>\\n            <td>{{ user.name }}</td>\\n            <td>{{ user.username }}</td>\\n            <td>{{ user.email }}</td>\\n            <!-- <td>{{ user.address }}</td> -->\\n            <!-- <td>{{ user.country }}</td> -->\\n            <td>\\n                <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" data-bs-toggle=\\\"modal\\\" data-bs-target=\\\"usersmodal\\\" (click)=\\\"editUser(user.id)\\\">Edit</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deleteUser(user.id)\\\">Delete</button>\\n            </td>\\n        </tr>\\n    </tbody>\\n</table>\\n\\n<div class=\\\"modal fade\\\" id=\\\"usersmodal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"usersmodallabel\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-dialog-centered modal-dialog-scrollable\\\" role=\\\"form\\\">\\n        <div class=\\\"modal-content\\\">\\n            <!-- Update/Delete Form in Modal -->\\n        </div>\\n    </div>\\n    <div class=\\\"modal-footer\\\" class=\\\"btn btn-dark\\\" data-bs-dismiss=\\\"modal\\\">Back</div>\\n</div>\\n\"","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map !== 'undefined') {\r\n        return Map;\r\n    }\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            this.__entries__ = [];\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"size\", {\r\n            /**\r\n             * @returns {boolean}\r\n             */\r\n            get: function () {\r\n                return this.__entries__.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        class_1.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n            return entry && entry[1];\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            }\r\n            else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.forEach = function (callback, ctx) {\r\n            if (ctx === void 0) { ctx = null; }\r\n            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\r\nvar global$1 = (function () {\r\n    if (typeof global !== 'undefined' && global.Math === Math) {\r\n        return global;\r\n    }\r\n    if (typeof self !== 'undefined' && self.Math === Math) {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined' && window.Math === Math) {\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line no-new-func\r\n    return Function('return this')();\r\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        // It's required to use a bounded function because IE sometimes throws\r\n        // an \"Invalid calling object\" error if rAF is invoked without the global\r\n        // object on the left hand side.\r\n        return requestAnimationFrame.bind(global$1);\r\n    }\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\n\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction throttle (callback, delay) {\r\n    var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n            callback();\r\n        }\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        }\r\n        else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n        lastCallTime = timeStamp;\r\n    }\r\n    return proxy;\r\n}\n\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n// Check if MutationObserver is available.\r\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */\r\n    function ResizeObserverController() {\r\n        /**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.connected_ = false;\r\n        /**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.mutationEventsAdded_ = false;\r\n        /**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */\r\n        this.mutationsObserver_ = null;\r\n        /**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */\r\n        this.observers_ = [];\r\n        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n    }\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.addObserver = function (observer) {\r\n        if (!~this.observers_.indexOf(observer)) {\r\n            this.observers_.push(observer);\r\n        }\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this.connected_) {\r\n            this.connect_();\r\n        }\r\n    };\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.removeObserver = function (observer) {\r\n        var observers = this.observers_;\r\n        var index = observers.indexOf(observer);\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this.connected_) {\r\n            this.disconnect_();\r\n        }\r\n    };\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.refresh = function () {\r\n        var changesDetected = this.updateObservers_();\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (changesDetected) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */\r\n    ResizeObserverController.prototype.updateObservers_ = function () {\r\n        // Collect observers that have active observations.\r\n        var activeObservers = this.observers_.filter(function (observer) {\r\n            return observer.gatherActive(), observer.hasActive();\r\n        });\r\n        // Deliver notifications in a separate cycle in order to avoid any\r\n        // collisions between observers, e.g. when multiple instances of\r\n        // ResizeObserver are tracking the same element and the callback of one\r\n        // of them changes content dimensions of the observed target. Sometimes\r\n        // this may result in notifications being blocked for the rest of observers.\r\n        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n        return activeObservers.length > 0;\r\n    };\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.connect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already added.\r\n        if (!isBrowser || this.connected_) {\r\n            return;\r\n        }\r\n        // Subscription to the \"Transitionend\" event is used as a workaround for\r\n        // delayed transitions. This way it's possible to capture at least the\r\n        // final state of an element.\r\n        document.addEventListener('transitionend', this.onTransitionEnd_);\r\n        window.addEventListener('resize', this.refresh);\r\n        if (mutationObserverSupported) {\r\n            this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n            this.mutationsObserver_.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n        else {\r\n            document.addEventListener('DOMSubtreeModified', this.refresh);\r\n            this.mutationEventsAdded_ = true;\r\n        }\r\n        this.connected_ = true;\r\n    };\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.disconnect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already removed.\r\n        if (!isBrowser || !this.connected_) {\r\n            return;\r\n        }\r\n        document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n        window.removeEventListener('resize', this.refresh);\r\n        if (this.mutationsObserver_) {\r\n            this.mutationsObserver_.disconnect();\r\n        }\r\n        if (this.mutationEventsAdded_) {\r\n            document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n        }\r\n        this.mutationsObserver_ = null;\r\n        this.mutationEventsAdded_ = false;\r\n        this.connected_ = false;\r\n    };\r\n    /**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n        // Detect whether transition may affect dimensions of an element.\r\n        var isReflowProperty = transitionKeys.some(function (key) {\r\n            return !!~propertyName.indexOf(key);\r\n        });\r\n        if (isReflowProperty) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.getInstance = function () {\r\n        if (!this.instance_) {\r\n            this.instance_ = new ResizeObserverController();\r\n        }\r\n        return this.instance_;\r\n    };\r\n    /**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.instance_ = null;\r\n    return ResizeObserverController;\r\n}());\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n    return target;\r\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\r\nvar getWindowOf = (function (target) {\r\n    // Assume that the element is an instance of Node, which means that it\r\n    // has the \"ownerDocument\" property from which we can retrieve a\r\n    // corresponding global object.\r\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n    // Return the local global object if it's not possible extract one from\r\n    // provided element.\r\n    return ownerGlobal || global$1;\r\n});\n\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        positions[_i - 1] = arguments[_i];\r\n    }\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n        var position = positions_1[_i];\r\n        var value = styles['padding-' + position];\r\n        paddings[position] = toFloat(value);\r\n    }\r\n    return paddings;\r\n}\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n    var styles = getWindowOf(target).getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width), height = toFloat(styles.height);\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement !== 'undefined') {\r\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n    }\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n        typeof target.getBBox === 'function'); };\r\n})();\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === getWindowOf(target).document.documentElement;\r\n}\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n    return getHTMLElementContentRect(target);\r\n}\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(_a) {\r\n    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n    return rect;\r\n}\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    function ResizeObservation(target) {\r\n        /**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastWidth = 0;\r\n        /**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastHeight = 0;\r\n        /**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */\r\n        this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var rect = getContentRect(this.target);\r\n        this.contentRect_ = rect;\r\n        return (rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight);\r\n    };\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */\r\n    ResizeObservation.prototype.broadcastRect = function () {\r\n        var rect = this.contentRect_;\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n        return rect;\r\n    };\r\n    return ResizeObservation;\r\n}());\n\nvar ResizeObserverEntry = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */\r\n    function ResizeObserverEntry(target, rectInit) {\r\n        var contentRect = createReadOnlyRect(rectInit);\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineConfigurable(this, { target: target, contentRect: contentRect });\r\n    }\r\n    return ResizeObserverEntry;\r\n}());\n\nvar ResizeObserverSPI = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n        /**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */\r\n        this.activeObservations_ = [];\r\n        /**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */\r\n        this.observations_ = new MapShim();\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n        this.callback_ = callback;\r\n        this.controller_ = controller;\r\n        this.callbackCtx_ = callbackCtx;\r\n    }\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.observe = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is already being observed.\r\n        if (observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.set(target, new ResizeObservation(target));\r\n        this.controller_.addObserver(this);\r\n        // Force the update of observations.\r\n        this.controller_.refresh();\r\n    };\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.unobserve = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is not being observed.\r\n        if (!observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.delete(target);\r\n        if (!observations.size) {\r\n            this.controller_.removeObserver(this);\r\n        }\r\n    };\r\n    /**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.disconnect = function () {\r\n        this.clearActive();\r\n        this.observations_.clear();\r\n        this.controller_.removeObserver(this);\r\n    };\r\n    /**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.gatherActive = function () {\r\n        var _this = this;\r\n        this.clearActive();\r\n        this.observations_.forEach(function (observation) {\r\n            if (observation.isActive()) {\r\n                _this.activeObservations_.push(observation);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.broadcastActive = function () {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n        var ctx = this.callbackCtx_;\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        var entries = this.activeObservations_.map(function (observation) {\r\n            return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n        });\r\n        this.callback_.call(ctx, entries, ctx);\r\n        this.clearActive();\r\n    };\r\n    /**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.clearActive = function () {\r\n        this.activeObservations_.splice(0);\r\n    };\r\n    /**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObserverSPI.prototype.hasActive = function () {\r\n        return this.activeObservations_.length > 0;\r\n    };\r\n    return ResizeObserverSPI;\r\n}());\n\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */\r\n    function ResizeObserver(callback) {\r\n        if (!(this instanceof ResizeObserver)) {\r\n            throw new TypeError('Cannot call a class as a function.');\r\n        }\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        var controller = ResizeObserverController.getInstance();\r\n        var observer = new ResizeObserverSPI(callback, controller, this);\r\n        observers.set(this, observer);\r\n    }\r\n    return ResizeObserver;\r\n}());\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(function (method) {\r\n    ResizeObserver.prototype[method] = function () {\r\n        var _a;\r\n        return (_a = observers.get(this))[method].apply(_a, arguments);\r\n    };\r\n});\n\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof global$1.ResizeObserver !== 'undefined') {\r\n        return global$1.ResizeObserver;\r\n    }\r\n    return ResizeObserver;\r\n})();\n\nexport default index;\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { FinalTestComponent } from \"./final-test.component\";\r\nimport { FTBoardAdminComponent } from \"./ft-board-admin/ft-board-admin.component\";\r\nimport { FtLoginComponent } from \"./ft-login/ft-login.component\";\r\nimport { FTSignupformComponent } from \"./ft-signupform/ft-signupform.component\";\r\nimport { FTUsersComponent } from \"./ft-users/users.component\";\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'', component: FinalTestComponent\r\n  },\r\n  {\r\n    path:'ft-login', component: FtLoginComponent\r\n  },\r\n  {\r\n    path:'ft-signup', component: FTSignupformComponent\r\n  },\r\n  {\r\n    path:'admin', component: FTBoardAdminComponent\r\n  },\r\n  {\r\n    path:'users', component: FTUsersComponent\r\n  }\r\n  \r\n]\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class FinalTestRoutingModule {}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZpbmFsLXRlc3QvZmluYWwtdGVzdC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-final-test',\n  templateUrl: './final-test.component.html',\n  styleUrls: ['./final-test.component.css']\n})\nexport class FinalTestComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { CommonModule } from \"@angular/common\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { FinalTestRoutingModule } from \"./final-test-routing.module\";\r\nimport { FinalTestComponent } from \"./final-test.component\";\r\nimport { FTBoardAdminComponent } from \"./ft-board-admin/ft-board-admin.component\";\r\nimport { FTBoardUserComponent } from \"./ft-board-user/ft-board-user.component\";\r\nimport { FtLoginComponent } from \"./ft-login/ft-login.component\";\r\nimport { FTSignupformComponent } from \"./ft-signupform/ft-signupform.component\";\r\nimport { NgxEchartsModule } from 'ngx-echarts';\r\nimport { FtBoardChartComponent } from \"./ft-board-admin/ft-board-chart/ft-board-chart.component\";\r\nimport { FTUsersComponent } from \"./ft-users/users.component\";\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FinalTestComponent,\r\n    FtLoginComponent,\r\n    FTBoardAdminComponent,\r\n    FTBoardUserComponent,\r\n    FTSignupformComponent,\r\n    FtBoardChartComponent,\r\n    FTUsersComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FinalTestRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgxEchartsModule.forRoot({\r\n      echarts: () => import('echarts')\r\n    })\r\n  ],\r\n  providers: [\r\n      // UserService\r\n  ]\r\n})\r\nexport class FinalTestModule { }","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZpbmFsLXRlc3QvZnQtYm9hcmQtYWRtaW4vZnQtYm9hcmQtYWRtaW4uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FTUserService } from '../ft-loginservices/ft-user.service';\r\n\r\n@Component({\r\n  selector: 'app-board-admin',\r\n  templateUrl: './ft-board-admin.component.html',\r\n  styleUrls: ['./ft-board-admin.component.css']\r\n})\r\nexport class FTBoardAdminComponent implements OnInit {\r\n  content = '';\r\n\r\n  constructor(private userService: FTUserService) { }\r\n\r\n  ngOnInit() {\r\n    this.userService.getAdminBoard().subscribe(\r\n      data => {\r\n        this.content = data;\r\n      },\r\n      err => {\r\n        this.content = JSON.parse(err.error).message;\r\n      }\r\n    );\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZpbmFsLXRlc3QvZnQtYm9hcmQtYWRtaW4vZnQtYm9hcmQtY2hhcnQvZnQtYm9hcmQtY2hhcnQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n// import { ChartType, ChartOptions } from 'chart.js';\n// import { Label } from 'ng2-charts';\n// import * as pluginDataLabels from 'chartjs-plugin-datalabels';\n\nimport { Chart } from 'chart.js';\n\n@Component({\n  selector: 'app-ft-board-chart',\n  templateUrl: './ft-board-chart.component.html',\n  styleUrls: ['./ft-board-chart.component.css']\n})\nexport class FtBoardChartComponent implements OnInit {\n\n   options: any = {};\n   xAxisData: any = [];\n   data1: any = [];\n   data2: any = [];\n  \n  constructor() { }\n\n  ngOnInit() {\n    \n\n    for (let i = 0; i < 100; i++) {\n      this.xAxisData.push('category' + i);\n      this.data1.push((Math.sin(i / 5) * (i / 5 - 10) + i / 6) * 5);\n      this.data2.push((Math.cos(i / 5) * (i / 5 - 10) + i / 6) * 5);\n    }\n\n    this.options = {\n      legend: {\n        data: ['bar', 'bar2'],\n        align: 'left',\n      },\n      tooltip: {},\n      xAxis: {\n        data: this.xAxisData,\n        silent: false,\n        splitLine: {\n          show: false,\n        },\n      },\n      yAxis: {},\n      series: [\n        {\n          name: 'bar',\n          type: 'bar',\n          data: this.data1,\n          animationDelay: (idx) => idx * 10,\n        },\n        {\n          name: 'bar2',\n          type: 'bar',\n          data: this.data2,\n          animationDelay: (idx) => idx * 10 + 100,\n        },\n      ],\n      animationEasing: 'elasticOut',\n      animationDelayUpdate: (idx) => idx * 5,\n    };\n  }\n\n  ngAfterViewInit() {\n    \n  }\n\n\n\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZpbmFsLXRlc3QvZnQtYm9hcmQtdXNlci9mdC1ib2FyZC11c2VyLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FTUserService } from '../ft-loginservices/ft-user.service';\r\n\r\n@Component({\r\n  selector: 'app-board-user',\r\n  templateUrl: './ft-board-user.component.html',\r\n  styleUrls: ['./ft-board-user.component.css']\r\n})\r\nexport class FTBoardUserComponent implements OnInit {\r\n  content = '';\r\n\r\n  constructor(private userService: FTUserService) { }\r\n\r\n  ngOnInit() {\r\n    this.userService.getUserBoard().subscribe(\r\n      data => {\r\n        this.content = data;\r\n      },\r\n      err => {\r\n        this.content = JSON.parse(err.error).message;\r\n      }\r\n    );\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZpbmFsLXRlc3QvZnQtbG9naW4vZnQtbG9naW4uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FTAuthService } from '../ft-loginservices/ft-auth.service';\nimport { FTTokenStorageService } from '../ft-loginservices/ft-token-service.service';\n\n@Component({\n  selector: 'app-ft-login',\n  templateUrl: './ft-login.component.html',\n  styleUrls: ['./ft-login.component.css']\n})\nexport class FtLoginComponent implements OnInit {\n\n  \n  form:any = {};\n  isLoggedIn = false;\n  isLoginFailed = false;\n  errorMsg:string;\n  roles:string[];\n\n  constructor(private authService: FTAuthService, private tokenStorage: FTTokenStorageService) { }\n\n  ngOnInit() {\n    if(this.tokenStorage.getToken()) {\n      this.isLoggedIn = true;\n      this.roles = this.tokenStorage.getUser().roles;\n    }\n  }\n\n  onSubmit(){\n    this.authService.login(this.form).subscribe(\n      data => {\n        this.tokenStorage.saveToken(data.accessToken);\n        this.tokenStorage.saveUser(data);\n        this.isLoginFailed = false;\n        this.isLoggedIn = true;\n        this.roles = this.tokenStorage.getUser().roles;\n        this.reloadPage();\n      }, err => {\n        this.errorMsg = err.error.message;\n        this.isLoginFailed = true;\n      }\n    );\n\n  }\n\n  reloadPage() { window.location.reload(); }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nconst AUTH_API = 'http://localhost:8080/api/auth/';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FTAuthService {\n\n  constructor(private http: HttpClient) { }\n\n  login(credentials): Observable<any> {\n    return this.http.post(AUTH_API + 'signin', {\n      username: credentials.username,\n      password: credentials.password\n    }, httpOptions);\n  }\n\n  register(user): Observable<any> {\n    return this.http.post(AUTH_API + 'signup', {\n      username: user.username,\n      email: user.email,\n      password: user.password\n    }, httpOptions);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nconst TOKEN_KEY = 'auth-token';\nconst USER_KEY = 'auth-user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FTTokenStorageService {\n\n  constructor() { }\n\n  signOut() {\n    window.sessionStorage.clear();\n  }\n\n  public saveToken(token: string) {\n    window.sessionStorage.removeItem(TOKEN_KEY);\n    window.sessionStorage.setItem(TOKEN_KEY, token);\n  }\n\n  public getToken(): string {\n    return sessionStorage.getItem(TOKEN_KEY);\n  }\n\n  public saveUser(user) {\n    window.sessionStorage.removeItem(USER_KEY);\n    window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\n  }\n\n  public getUser() {\n    return JSON.parse(sessionStorage.getItem(USER_KEY));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nconst API_URL = 'http://localhost:8080/api/test/';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FTUserService {\n\n  constructor(private http: HttpClient) { }\n\n  getPublicContent(): Observable<any> {\n    return this.http.get(API_URL + 'all', { responseType: 'text' });\n  }\n\n  getUserBoard(): Observable<any> {\n    return this.http.get(API_URL + 'user', { responseType: 'text' });\n  }\n\n  getAdminBoard(): Observable<any> {\n    return this.http.get(API_URL + 'admin', { responseType: 'text' });\n  }\n}\n","export default \"label {\\r\\n  display: block;\\r\\n  margin-top: 10px;\\r\\n}\\r\\n\\r\\n.card-container.card {\\r\\n  max-width: 400px !important;\\r\\n  padding: 40px 40px;\\r\\n}\\r\\n\\r\\n.card {\\r\\n  background-color: #f7f7f7;\\r\\n  padding: 20px 25px 30px;\\r\\n  margin: 0 auto 25px;\\r\\n  margin-top: 50px;\\r\\n  border-radius: 2px;\\r\\n  box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\\r\\n}\\r\\n\\r\\n.profile-img-card {\\r\\n  width: 96px;\\r\\n  height: 96px;\\r\\n  margin: 0 auto 10px;\\r\\n  display: block;\\r\\n  border-radius: 50%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZmluYWwtdGVzdC9mdC1zaWdudXBmb3JtL2Z0LXNpZ251cGZvcm0uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQWM7RUFDZCxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSwyQkFBMkI7RUFDM0Isa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLHVCQUF1QjtFQUN2QixtQkFBbUI7RUFDbkIsZ0JBQWdCO0VBR2hCLGtCQUFrQjtFQUdsQiwwQ0FBMEM7QUFDNUM7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsWUFBWTtFQUNaLG1CQUFtQjtFQUNuQixjQUFjO0VBR2Qsa0JBQWtCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvZmluYWwtdGVzdC9mdC1zaWdudXBmb3JtL2Z0LXNpZ251cGZvcm0uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImxhYmVsIHtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBtYXJnaW4tdG9wOiAxMHB4O1xyXG59XHJcblxyXG4uY2FyZC1jb250YWluZXIuY2FyZCB7XHJcbiAgbWF4LXdpZHRoOiA0MDBweCAhaW1wb3J0YW50O1xyXG4gIHBhZGRpbmc6IDQwcHggNDBweDtcclxufVxyXG5cclxuLmNhcmQge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmN2Y3Zjc7XHJcbiAgcGFkZGluZzogMjBweCAyNXB4IDMwcHg7XHJcbiAgbWFyZ2luOiAwIGF1dG8gMjVweDtcclxuICBtYXJnaW4tdG9wOiA1MHB4O1xyXG4gIC1tb3otYm9yZGVyLXJhZGl1czogMnB4O1xyXG4gIC13ZWJraXQtYm9yZGVyLXJhZGl1czogMnB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDJweDtcclxuICAtbW96LWJveC1zaGFkb3c6IDBweCAycHggMnB4IHJnYmEoMCwgMCwgMCwgMC4zKTtcclxuICAtd2Via2l0LWJveC1zaGFkb3c6IDBweCAycHggMnB4IHJnYmEoMCwgMCwgMCwgMC4zKTtcclxuICBib3gtc2hhZG93OiAwcHggMnB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMyk7XHJcbn1cclxuXHJcbi5wcm9maWxlLWltZy1jYXJkIHtcclxuICB3aWR0aDogOTZweDtcclxuICBoZWlnaHQ6IDk2cHg7XHJcbiAgbWFyZ2luOiAwIGF1dG8gMTBweDtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICAtbW96LWJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAtd2Via2l0LWJvcmRlci1yYWRpdXM6IDUwJTtcclxuICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbn1cclxuIl19 */\"","import { Component, OnInit, Output,EventEmitter,ViewChild,ElementRef,ChangeDetectionStrategy,DoCheck,OnChanges, Input } from '@angular/core';\nimport { FormBuilder,FormControl,FormGroup,Validators } from '@angular/forms';\nimport { FTAuthService } from '../ft-loginservices/ft-auth.service';\n\n\n@Component({\n  selector: 'app-ft-signupform',\n  templateUrl: './ft-signupform.component.html',\n  styleUrls: ['./ft-signupform.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FTSignupformComponent implements OnInit {\n  // signUpForm: FormGroup;\n  // submitted:boolean;\n  // userData: FormUser;\n  // message: string = \"This is child Message\";\n  // @Output() PostData = new EventEmitter<FormUser>();\n  // @Input('formuser') formuser;\n  // @ViewChild('fname',{static: false,read:ElementRef}) firstname: ElementRef;\n  // constructor(private formBuilder: FormBuilder) {\n  //   this.submitted = false;\n  //  }\n\n  form: any = {};\n  isSuccessful = false;\n  isSignUpFailed = false;\n  errorMsg = '';\n\n  constructor(private authService: FTAuthService) {}\n\n  ngOnInit() {\n\n    // this.signUpForm = this.formBuilder.group({\n    //   username:['',Validators.required],\n    //   email:['',[Validators.required,Validators.email]],\n    //   password:['',Validators.required]\n    // });\n\n    // console.log(\"NgOnInit()\");\n\n  }\n\n  get f(){\n    return this.form.controls;\n  }\n\n  onSubmit() {\n    this.authService.register(this.form).subscribe(\n      data => {\n        console.log(data);\n        this.isSuccessful = true;\n        this.isSignUpFailed = false;\n      }, err => {\n        this.errorMsg = err.error.message;\n        this.isSignUpFailed = true;\n      }\n    );\n  }\n\n\n  ngOnChanges(){\n    \n  }\n  ngDoCheck(){\n    \n  }\n  ngAfterViewInit(){\n    \n  }\n\n  onScroll(){\n    console.log('On scroll in Signup Component');\n  }\n\n}\n","import { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { Injectable, EventEmitter } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { catchError, retry } from 'rxjs/operators';\r\n\r\nexport interface User {\r\n    id: number;\r\n    name: string;\r\n    username: string;\r\n    email: string;\r\n    address: {\r\n        street: string;\r\n        suite: string;\r\n        city: string;\r\n        zipcode: string;\r\n        geo: {\r\n            lat: string;\r\n            lng: string;\r\n        }\r\n    };\r\n    phone: string;\r\n    website: string;\r\n    company: {\r\n        name: string;\r\n        catchPhrase: string;\r\n        bs: string;\r\n    };\r\n}\r\n\r\nexport interface Users {\r\n    isAvailable: boolean;\r\n    users: User[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n    userSelected = new EventEmitter<User>();\r\n    \r\n    myAppUrl: string;\r\n    myApiUrl: string;\r\n    httpOptions = {\r\n        headers: new HttpHeaders({\r\n            'Content-Type': 'application/json; charset=utf-8'\r\n    })\r\n  };\r\n\r\n    constructor(private http: HttpClient) {        \r\n      this.myAppUrl = environment.typiCodeUrl;\r\n      this.myApiUrl = '/users';\r\n    }\r\n\r\n    errorHandler(error) {\r\n        let errorMessage = '';\r\n        if (error.error instanceof ErrorEvent) {\r\n        // Get client-side error\r\n        errorMessage = error.error.message;\r\n        } else {\r\n        // Get server-side error\r\n        errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n        }\r\n        console.log(errorMessage);\r\n        return throwError(errorMessage);\r\n    }\r\n\r\n    getAllUsers():Observable<User[]> {\r\n        // return this.http.get<User[]>(environment.mockendUsersUrl + \"users\", {observe: 'response'});\r\n        return this.http.get<User[]>(this.myAppUrl + this.myApiUrl)\r\n            .pipe(\r\n                retry(1),\r\n                catchError(this.errorHandler)\r\n            );\r\n    }\r\n\r\n    getUserById(userId:number):Observable<User> {\r\n        // return this.http.get<User>(`${environment.mockendUsersUrl}/users/${userId}`, {observe: 'response'}).pipe(map(res => res));\r\n        return this.http.get<User>(this.myAppUrl + this.myApiUrl + '/' + userId)\r\n            .pipe(\r\n            retry(1),\r\n            catchError(this.errorHandler)\r\n            );\r\n    }\r\n    \r\n\r\n    createUser(userDetails:User):Observable<User> {\r\n        // return this.http.post<User>(`${environment.mockendUsersUrl}/users`, userDetails);\r\n        return this.http.post<User>(this.myAppUrl + this.myApiUrl, JSON.stringify(userDetails), this.httpOptions)\r\n            .pipe(\r\n                retry(1),\r\n                catchError(this.errorHandler)\r\n            );\r\n    }\r\n\r\n    updateUser(userId:number, userUpdate:User):Observable<User>{\r\n        // const httpOptions = {\r\n        // method: 'PUT',\r\n        // body: JSON.stringify(userUpdate),\r\n        // headers: new HttpHeaders({\r\n        //     'Content-Type':  'application/json'\r\n        // })\r\n        // };\r\n\r\n        // return this.http.put<User>(`${environment.mockendUsersUrl}/users/${userId}`, JSON.stringify(userUpdate), httpOptions);\r\n\r\n        return this.http.put<User>(this.myAppUrl + this.myApiUrl + '/' + userId, JSON.stringify(userUpdate), this.httpOptions)\r\n            .pipe(\r\n                retry(1),\r\n                catchError(this.errorHandler)\r\n            );\r\n    }\r\n        \r\n    deleteUser(userId:number):Observable<User>{\r\n        // return this.http.delete<User>(`${environment.mockendUsersUrl}/users/${userId}`);\r\n        return this.http.delete<User>(this.myAppUrl + this.myApiUrl + '/' + userId)\r\n            .pipe(\r\n                retry(1),\r\n                catchError(this.errorHandler)\r\n            );\r\n    }\r\n    \r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZpbmFsLXRlc3QvZnQtdXNlcnMvdXNlcnMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User, UserService } from './user.service';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class FTUsersComponent implements OnInit {\n\n  allUser$: Observable<User[]>;\n  loading: boolean = true;\n  errors: any;\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit() {\n    // this.userService.getAllUsers().subscribe(res => {\n    //   // console.log(\"Http Response: \", res);\n    //   // console.log(typeof res);\n    //   // console.log(\"Http Response Body Type: \", typeof res.body);\n    //   // console.log(typeof res.body);\n    //   this.allUsers = JSON.stringify(res);\n    //   // this.loading = res.loading;\n    //   // this.errors = res.errors;\n    // });\n    this.loadAllUsers();\n  }\n\n  loadAllUsers() {\n    this.allUser$ = this.userService.getAllUsers();\n    console.log(typeof this.allUser$, this.allUser$);\n  }\n\n\n  // These 3: Click -> send to Modal, sometimes populating form -> Action/Cancel btn\n  // use the data-target thingy\n  addUser() {\n    console.log(\"Add User triggered.\");\n  }\n\n  editUser(userId:string) {\n    console.log(`Edit User '$userId' triggered.`);\n  }\n\n  deleteUser(userId:string) {\n    console.log(`Delete User '$userId' triggered.`);\n  }\n\n  ngOnDestroy() {\n    // this.userService.getAllUsers().unsubscribe();\n  }\n\n}\n"],"sourceRoot":"webpack:///","file":"final-test-final-test-module-es5.js"}